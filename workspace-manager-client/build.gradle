plugins {
	id "java-library"
	id "maven-publish"

	id "com.jfrog.artifactory" version "4.18.2"
	id "org.hidetake.swagger.generator"
}

sourceCompatibility = JavaVersion.VERSION_1_8 // Rawls consumes this and is Java 8

repositories {
	mavenCentral()
}

dependencies {
	// Swagger deps, versions controlled by dependencyManagement in root project
	implementation group: "org.glassfish.jersey.core", name: "jersey-client"
	implementation group: "org.glassfish.jersey.media", name: "jersey-media-json-jackson"
	implementation group: "org.glassfish.jersey.media", name: "jersey-media-multipart"
	implementation group: "com.fasterxml.jackson.datatype", name: "jackson-datatype-jsr310"
	implementation group: "io.swagger.core.v3", name: "swagger-annotations"
	swaggerCodegen group: "io.swagger.codegen.v3", name: "swagger-codegen-cli"
}

// OpenAPI/Swagger Client Generation

swaggerSources {
	client {
		inputFile = file("${resourceDir}/api/service_openapi.yaml")
		code {
			language = "java"
			library = "jersey2"
			templateDir = file("${projectDir}/src/main/resources/swaggercodegen")
			outputDir = file("${swaggerOutputDir}")
			rawOptions = [
					"--model-package", "${artifactGroup}.model",
					"--api-package", "${artifactGroup}.api",
					"--invoker-package", "${artifactGroup}.client",
					"--group-id", "${artifactGroup}",
					"--artifact-version", "${version}",
					"--ignore-file-override", "${projectDir}/.swagger-codegen-ignore",
					"-D", "apiTests=false," +
							"apiDocs=false," +
							"modelTests=false," +
							"modelDocs=false," +
							"dateLibrary=java8"
			]
		}
	}
}

// Publishing

// TODO: there may be a better way to supply these values than envvars.
// This and the test below makes sure the build will fail reasonably if you try
// to publish without the environment variables defined.
def artifactory_username = System.getenv("ARTIFACTORY_USERNAME")
def artifactory_password = System.getenv("ARTIFACTORY_PASSWORD")

gradle.taskGraph.whenReady { taskGraph ->
	if (taskGraph.hasTask(artifactoryPublish) &&
			(artifactory_username == null || artifactory_password == null)) {
		throw new GradleException("Set env vars ARTIFACTORY_USERNAME and ARTIFACTORY_PASSWORD to publish")
	}
}

publishing {
	publications {
		workspaceManagerClientLibrary(MavenPublication) {
			from components.java
			versionMapping {
				usage("java-runtime") {
					fromResolutionResult()
				}
			}
		}
	}
}

artifactory {
	publish {
		contextUrl = "https://broadinstitute.jfrog.io/broadinstitute/"
		repository {
			repoKey = "libs-snapshot-local" // The Artifactory repository key to publish to
			username = "${artifactory_username}" // The publisher user name
			password = "${artifactory_password}" // The publisher password
		}
		defaults {
			// This is how we tell the Artifactory Plugin which artifacts should be published to Artifactory.
			// Reference to Gradle publications defined in the build script.
			publications("workspaceManagerClientLibrary")
			publishArtifacts = true
			publishPom = true
		}
	}
}

// Internal dependencies

sourceSets.main.java.srcDir "${swaggerOutputDir}/src/main/java"
swaggerSources.client.code.dependsOn (":unzipCloudResourceSchema")
compileJava.dependsOn swaggerSources.client.code
