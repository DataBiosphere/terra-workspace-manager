plugins {
    id 'java'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "com.diffplug.spotless" version "5.8.2"
    // Terra Test Runner Plugin
    id 'bio.terra.test-runner-plugin' version '0.0.3-SNAPSHOT'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release-local/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

dependencies {
    ext {
        apacheMath = '3.6.1'
        findbugsAnnotations = "3.0.1"
        guava = "29.0-jre"
        jackson = "2.10.2"
        jersey = "2.30.1"
        kubernetesClient = "10.0.0"
        logback = "1.2.3"
        slf4j = "1.7.25"
        hamcrest = "2.1"
        swaggerAnnotations = "2.1.5"

        googleApi = "1.23.0"
        googleCloud = "1.108.0"
        googleOauth2 = "0.20.0"
        googleContainer = "v1-rev93-1.25.0"

        workspacemanagerClient = "0.19.0-SNAPSHOT"
        datarepoClient = "1.0.155-SNAPSHOT"
        testRunner = "0.0.3-SNAPSHOT"
    }
    implementation group: 'org.apache.commons', name: 'commons-math3', version: "${apacheMath}"
    compileOnly "com.google.code.findbugs:annotations:${findbugsAnnotations}"
    implementation group: 'com.google.guava', name: 'guava', version: "${guava}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jackson}"
    compile "org.glassfish.jersey.inject:jersey-hk2:${jersey}"
    compile "io.kubernetes:client-java:${kubernetesClient}"
    compile "ch.qos.logback:logback-classic:${logback}"
    compile "org.slf4j:slf4j-api:${slf4j}"
    compile "org.hamcrest:hamcrest:${hamcrest}"

    // Google dependencies
    compile "com.google.api-client:google-api-client:${googleApi}"
    compile "com.google.auth:google-auth-library-oauth2-http:${googleOauth2}"
    compile "com.google.cloud:google-cloud-bigquery:${googleCloud}"
    compile "com.google.cloud:google-cloud-storage:${googleCloud}"
    compile "com.google.apis:google-api-services-container:${googleContainer}"

    // Data Repo client library
    implementation "bio.terra:datarepo-client:${datarepoClient}"
    compile "io.swagger.core.v3:swagger-annotations:${swaggerAnnotations}"

    // Workspace Manager client library
    // Gradle project property "workspacemanagerclientjar" overrides the fetch from Maven
    if (project.hasProperty("workspacemanagerclientjar")) {
        implementation files(project.findProperty("workspacemanagerclientjar"))
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jackson}"
        compile "org.glassfish.jersey.core:jersey-client:${jersey}"
        compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jersey}"
        compile "org.glassfish.jersey.media:jersey-media-multipart:${jersey}"
        compile "org.glassfish.jersey.inject:jersey-hk2:${jersey}"
    } else {
        implementation "bio.terra:workspace-manager-client:${workspacemanagerClient}"
        compile "io.swagger.core.v3:swagger-annotations:${swaggerAnnotations}"
    }

    // Terra Test Runner Library
    implementation "bio.terra:terra-test-runner:${testRunner}"
}

group "bio.terra"
version "1.0-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_11

spotless {
    java {
        googleJavaFormat()
        targetExclude "${buildDir}/**"
    }
}

compileJava.dependsOn spotlessApply

