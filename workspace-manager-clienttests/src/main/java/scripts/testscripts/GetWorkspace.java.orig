package scripts.testscripts;

<<<<<<< HEAD
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;

=======
>>>>>>> 35c2998 (first user of base class)
import bio.terra.testrunner.runner.config.TestUserSpecification;
import bio.terra.workspace.api.WorkspaceApi;
import bio.terra.workspace.client.ApiException;
import bio.terra.workspace.model.WorkspaceDescription;
<<<<<<< HEAD
import scripts.utils.WorkspaceFixtureTestScriptBase;
=======
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
<<<<<<< HEAD
=======

>>>>>>> 35c2998 (first user of base class)
import java.util.List;
import java.util.UUID;
import scripts.utils.WorkspaceTestScriptBase;

public class GetWorkspace extends WorkspaceTestScriptBase {
    private static final Logger logger = LoggerFactory.getLogger(GetWorkspace.class);
<<<<<<< HEAD

    private UUID workspaceId;

    @Override
    public void doSetup(List<TestUserSpecification> testUsers, WorkspaceApi workspaceApi)
        throws ApiException {
        workspaceId = UUID.randomUUID();
        final var requestBody = new CreateWorkspaceRequestBody()
            .id(workspaceId);
        final CreatedWorkspace workspace = workspaceApi.createWorkspace(requestBody);
        assertThat(workspace.getId(), equalTo(workspaceId));
=======
    private CreatedWorkspace workspace;

    @Override
    public void doSetup(List<TestUserSpecification> testUsers, WorkspaceApi workspaceApi)
        throws ApiException {
        final UUID workspaceId = UUID.randomUUID();
        final CreateWorkspaceRequestBody requestBody = new CreateWorkspaceRequestBody();
        requestBody.setId(workspaceId);
        workspace = workspaceApi.createWorkspace(requestBody);
>>>>>>> 35c2998 (first user of base class)
    }
>>>>>>> 85ad8d1 (rebase master)

public class GetWorkspace extends WorkspaceFixtureTestScriptBase {
    @Override
    public void doUserJourney(TestUserSpecification testUser, WorkspaceApi workspaceApi)
        throws ApiException {
        /**
         * This GetWorkspace test expects a valid workspace id
         * created by the setup step.
         *
         * Throw exception if anything goes wrong
         * **/
<<<<<<< HEAD
        final WorkspaceDescription workspaceDescription = workspaceApi
            .getWorkspace(getWorkspaceId());
        assertThat(workspaceDescription.getId(), equalTo(getWorkspaceId()));
    }
=======
<<<<<<< HEAD
        final WorkspaceDescription workspaceDescription = workspaceApi.getWorkspace(workspaceId);
        assertThat(workspaceDescription.getId(), equalTo(workspaceId));
=======
        final WorkspaceDescription workspaceDescription = workspaceApi.getWorkspace(workspace.getId());
>>>>>>> 35c2998 (first user of base class)
    }

    @Override
    public void doCleanup(List<TestUserSpecification> testUsers, WorkspaceApi workspaceApi)
        throws ApiException {
<<<<<<< HEAD
        workspaceApi.deleteWorkspace(workspaceId);
=======
        workspaceApi.deleteWorkspace(workspace.getId());
>>>>>>> 35c2998 (first user of base class)
    }

>>>>>>> 85ad8d1 (rebase master)
}
