# Workflow for testing new actions and workflows
#
# Github does not provide a way to run workflows that are not already merged to the
# default branch. Once a workflow that is configured for manual running is merged,
# then when you change it in a branch and execute your changes.
#
# The purpose of this workflow is to be a scratch space for developing workflows.
# Use it to prepare a workflow. When it is ready, you can copy the file to the
# proper name and merge from there.

name: Workflow Tester
on:
  workflow_dispatch: {}

jobs:
  server-startup-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Initialize Postgres DB for local server test run
        env:
          PGPASSWORD: postgres
        run: psql -h 127.0.0.1 -U postgres -f ./service/local-dev/local-postgres-init.sql

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Write config
        id: config
        uses: ./.github/actions/write-credentials
        with:
          user-delegated-sa-b64: ${{ secrets.USER_DELEGATED_SA_DEV }}
          buffer-client-sa-b64: ${{ secrets.BUFFER_CLIENT_SA_DEV }}
          testrunner-sa-b64: ${{ secrets.TESTRUNNER_SA_DEV }}
          testrunner-k8s-sa-b64: ${{ secrets.TESTRUNNER_K8S_SA_DEV }}
          wsm-sa-b64: ${{ secrets.WSM_SA_DEV }}
          janitor-sa-b64: ${{ secrets.JANITOR_SA_DEV }}
          policy-client-sa-b64: ${{ secrets.POLICY_CLIENT_SA_DEV }}

      # Configure up so the cronjobs do not start
      - name: Start the server with immediate exit
        env:
          spring_profiles_active: human-readable-logging
          workspace_startup_exitafterinitialization: true
          workspace_danglingresourcecleanup_enabled: false
          workspace_temporarygrantrevoke_revokeenabled: false
          workspace_privateresourcecleanup_enabled: false
        run: ./gradlew service:bootRun
