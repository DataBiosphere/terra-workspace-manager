# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Test Runner Nightly Tests

on:
  workflow_dispatch: {}
#  schedule:
#    - cron: '0 7 * * *' # run at 7 AM UTC, 2 AM ET.

jobs:
  test-runner-integration:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up AdoptOpenJDK 11
        uses: joschi/setup-jdk@v2
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get Vault token
        id: vault-token-step
        uses: ./.github/actions/get-vault-token
        with:
          vault-role: ${{ secrets.VAULT_APPROLE_ROLE_ID }}
          vault-secret: ${{ secrets.VAULT_APPROLE_SECRET_ID }}

      - name: Run the integration test suite
        id: integration-test
        if: ${{ always() }}
        uses: ./.github/actions/integration-test
        with:
          test-server: workspace-wsmtest.json
# TODO: run the whole test
#          test: suites/FullIntegration.json
          test: configs/integration/BasicUnauthenticated.json
          vault-token: ${{ steps.vault-token-step.outputs.vault-token.value }}

      - name: Run the perf test suite
        id: perf-test
        if: ${{ always() }}
        uses: ./.github/actions/integration-test
        with:
          test-server: workspace-wsmtest.json
          test: suites/BasicPerf.json
          vault-token: ${{ steps.vault-token-step.outputs.vault-token.value }}

      - name: Run the resiliency test suite
        id: resiliency-test
        if: ${{ always() }}
        uses: ./.github/actions/integration-test
        with:
          test-server: workspace-wsmtest.json
          test: suites/BasicResiliency.json
          vault-token: ${{ steps.vault-token-step.outputs.vault-token.value }}

      - name: Compose status message
        id: status-message
        env:
          INT_RESULT: ${{ steps.integration-test.outputs.result-status.value }}
        run: |
          url="https://github.com/DataBiosphere/terra-workspace-manager/actions/runs/$GITHUB_RUN_ID"
          echo "URL:$url"
          echo "result:$INT_RESULT"

      #- name: Notify WSM Slack
      #  if: ${{ always() }}
      #  # If we get tired of seeing successes, we can filter to only ping on failures
      #  uses: broadinstitute/action-slack@v3.8.0
      #  # see https://github.com/broadinstitute/action-slack
      #  env:
      #    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #  with:
      #    status: ${{ job.status }}
      #    channel: "#terra-workspace-manager"
      #    username: "WSM nightly tests"
      #    author_name: https://github.com/DataBiosphere/terra-workspace-manager/actions/runs/$GITHUB_RUN_ID
      #    icon_emoji: ':vertical_traffic_light:'
      #    text: ${{ format("Results: integration={0} perf={1} resiliency={2}", ${{ steps.integration-test.outputs.result-status }}, ${{ steps.perf-test.outputs.result-status }}, ${{ steps.resiliency-test.outputs.result-status }}) }}
