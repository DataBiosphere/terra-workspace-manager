name: QA-1914
on:
  push

jobs:
  qa-1914-job:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      # Sparse check out terra-helmfile repo version directories
      - uses: ./.github/actions/checkout-helm-versions
        with:
          repository: broadinstitute/terra-helmfile
          ref: master
          token: ${{ secrets.BROADBOT_TOKEN }}
          path: integration/terra-helmfile

      - name: Initialize Postgres DB for local server test run
        env:
          PGPASSWORD: postgres
        run: psql -h 127.0.0.1 -U postgres -f ./service/local-dev/local-postgres-init.sql

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get Vault token
        id: vault-token-step
        env:
          VAULT_ADDR: https://clotho.broadinstitute.org:8200
        run: |
          VAULT_TOKEN=$(docker run --rm --cap-add IPC_LOCK \
            -e "VAULT_ADDR=${VAULT_ADDR}" \
            vault:1.1.0 \
            vault write -field token \
              auth/approle/login role_id=${{ secrets.VAULT_APPROLE_ROLE_ID }} \
              secret_id=${{ secrets.VAULT_APPROLE_SECRET_ID }})
          echo ::set-output name=vault-token::$VAULT_TOKEN
          echo ::add-mask::$VAULT_TOKEN

      - name: Write config
        id: config
        uses: ./.github/actions/write-config
        with:
          vault-token: ${{ steps.vault-token-step.outputs.vault-token }}
          target: local

      - name: Launch local server
        uses: ./.github/actions/start-local-server

      - name: Run the perf test suite
        id: integration-test
        uses: ./.github/actions/integration-test
        with:
          test-server: workspace-local.json
          test: suites/BasicPerf.json

