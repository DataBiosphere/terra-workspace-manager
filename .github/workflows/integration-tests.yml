# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Integration Tests

on:
  workflow_dispatch:
    inputs:
      testEnv:
        description: 'Environment in which tests should be run. Currently works on dev, alpha and staging'
        required: true

jobs:
  integration-tests:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set env
        id: set-env-step
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }}; then
            ENV=${{ github.event.inputs.testEnv }}
          else
            echo ::error ::${{ github.event_name }} not supported for this workflow
            exit 1
          fi
          echo ::set-output name=test-env::$ENV

      - name: Set config files
        id: set-config-files-step
        run: |
          if ${{ steps.set-env-step.outputs.test-env == 'dev' }}; then
            TEST_SERVER=workspace-dev.json
            TEST=suites/dev/FullIntegration.json
          elif ${{ steps.set-env-step.outputs.test-env == 'alpha' }}; then
            TEST_SERVER=workspace-alpha.json
            TEST=suites/alpha/FullIntegration.json
          elif ${{ steps.set-env-step.outputs.test-env == 'staging' }}; then
            TEST_SERVER=workspace-staging.json
            TEST=suites/staging/FullIntegration.json
          else
            echo ::error ::${{ steps.set-env-step.outputs.test-env }} environment not supported for this workflow
            exit 1
          fi
          echo ::set-output name=test-server::$TEST_SERVER
          echo ::set-output name=test::$TEST

      - name: Set up AdoptOpenJDK 11
        uses: joschi/setup-jdk@v2
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get Vault token
        id: vault-token-step
        env:
          VAULT_ADDR: https://clotho.broadinstitute.org:8200
        run: |
          VAULT_TOKEN=$(docker run --rm --cap-add IPC_LOCK \
            -e "VAULT_ADDR=${VAULT_ADDR}" \
            vault:1.1.0 \
            vault write -field token \
              auth/approle/login role_id=${{ secrets.VAULT_APPROLE_ROLE_ID }} \
              secret_id=${{ secrets.VAULT_APPROLE_SECRET_ID }})
          echo ::set-output name=vault-token::$VAULT_TOKEN
          echo ::add-mask::$VAULT_TOKEN

      - name: Run the integration test suite
        id: integration-test
        if: ${{ always() }}
        uses: ./.github/actions/integration-test
        with:
          test-server: ${{ steps.set-config-files-step.outputs.test-server }}
          test: ${{ steps.set-config-files-step.outputs.test }}
          test-env: ${{ steps.set-env-step.outputs.test-env }}
          vault-token: ${{ steps.vault-token-step.outputs.vault-token }}

