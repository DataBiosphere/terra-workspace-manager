name: 'start-local-server'
description: 'Launch a bootrun server'
author: 'dd'
outputs:
  bootrunpid:
    description: 'pid of the gradle bootRun process'
    value: ${{ steps.launch.outputs.bootrunpid }}

runs:
  using: "composite"
  steps:
    - name: Launch the background process
      id: launch
      run: |
        ./gradlew :service:bootRun --args='--spring.profiles.include=human-readable-logging' | tee bootrun.log &
        bootrunpid=$!
        disown $bootrunpid
        echo "Launched WSM service pid $bootrunpid"
        echo "::set-output name=bootrunpid::$bootrunpid"
      shell: bash

    - name: Wait for boot run to be ready
      id: wait-for-ready
      run: |
        # If the timeout command times out, it SIGTERMs, which if done at the top-level of the
        # GHA script exits the script. So, we wrap the timeout and return status in a subprocess.
        # If timeout terminates its subprocess, then resultStatus is empty.
        # If echo succeeds, timeout exits normally, and resultStatus is 0.
        resultStatus=$(timeout 60 bash -c 'until echo > /dev/tcp/localhost/8080; do sleep 1; done' && echo $?)
        if [[ $resultStatus == 0 ]]
        then
          echo "Server started successfully"
        else
          echo "Server did not start successfully. Dumping log file"
          cat bootrun.log
        fi
      shell: bash
