# All env variables that are used in one place
# Exception: TERRA_ENV (which sets the active profile), which is parsed before this is.
env:
  db:
    host: jdbc:postgresql://${DATABASE_HOSTNAME:127.0.0.1}:5432
    init: ${INIT_DB:false}
    stairway:
      name: ${STAIRWAY_DATABASE_NAME:stairwaylib}
      pass: ${STAIRWAY_DATABASE_USER_PASSWORD:stairwaypwd}
      user: ${STAIRWAY_DATABASE_USER:stairwayuser}
    ws:
      name: ${STAIRWAY_DATABASE_NAME:wm}
      pass: ${STAIRWAY_DATABASE_USER_PASSWORD:wmpwd}
      user: ${STAIRWAY_DATABASE_USER:wmuser}
  gcp-sa-path: ${CLOUD_TRACE_SA_PATH:rendered/service-account.json}

logging.pattern.level: '%X{requestId} %5p'

server:
  compression:
    enabled: true
    mime-types: text/css,application/javascript
  port: 8080

spring:
  application.name: workspace
  cloud.gcp:
    credentials.location: file:${env.gcp-sa-path}
    trace.enabled: true
  profiles.active: ${TERRA_ENV:dev} # This is evaluated before the "env" section above
  resources:
    cache:
      cachecontrol:
        max-age: 0
        must-revalidate: true
    static-locations: classpath:/api/
  sleuth.sampler.probability: 0.1

workspace:
  datarepo.instances:
    terra-alpha: https://data.alpha.envs-terra.bio
    terra-dev: https://jade.datarepo-dev.broadinstitute.org
    terra-prod: https://jade-terra.datarepo-prod.broadinstitute.org
    terra-staging: https://data.staging.envs-terra.bio

  jdbc:
    initialize-on-start: ${env.db.init}
    password: ${env.db.ws.pass}
    upgrade-on-start: true
    uri: ${env.db.host}/${env.db.ws.name}
    username: ${env.db.ws.user}

  stairway:
    jdbc:
      force-clean: true
      migrate-upgrade: ${env.db.init}
      password: ${env.db.stairway.pass}
      uri: ${env.db.host}/${env.db.stairway.name}
      username: ${env.db.stairway.user}
    max-threads: 4
    resource-id: mc-terra-workspace-manager
    stairway-polling-interval-seconds: 1
    stairway-timeout-seconds: 1800

  status-check:
    frequency-ms: 60000
    staleness-threshold-ms: 600000
