plugins {
	id "idea"
	id "java"

	id "com.diffplug.spotless" version "5.1.0"
	id "com.github.ben-manes.versions" version "0.29.0"
	id "com.google.cloud.tools.jib" version "2.4.0"
	id "com.palantir.git-version" version "0.12.3"
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
	id "org.hidetake.swagger.generator" version "2.18.2"
	id "org.springframework.boot" version "2.3.2.RELEASE"
}

sourceCompatibility = JavaVersion.VERSION_11

allprojects {
	group = "bio.terra"
	version = "0.1.1-SNAPSHOT"
	ext {
		artifactGroup = "${group}.workspace"
		swaggerOutputDir = "${buildDir}/swagger-code"
		resourceDir = "${rootDir}/src/main/resources"
	}

	// specifying versions for dependencies, not adding the dependencies themselves (yet)
	apply plugin: "io.spring.dependency-management"
	dependencyManagement {
		imports {
			mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
		}
		dependencies {
			dependency group: "io.swagger.core.v3", name: "swagger-annotations", version: "2.1.4"
			dependency group: "io.swagger.codegen.v3", name: "swagger-codegen-cli", version: "3.0.20"
		}
	}

	apply plugin: "idea"
	idea {
		module {
			generatedSourceDirs = [file("${swaggerOutputDir}/src/main/java")]
			downloadJavadoc = true
		}
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/"
	}
	maven {
		url "https://broadinstitute.jfrog.io/broadinstitute/libs-release/"
	}
}

dependencies {
	// Terra deps
	implementation group: "bio.terra", name: "datarepo-client", version: "1.0.1-SNAPSHOT"
	implementation group: "bio.terra", name: "stairway", version: "0.0.4.1-SNAPSHOT"
	implementation group: "org.broadinstitute.dsde.workbench", name: "sam-client_2.12", version: "0.1-3a0df80"

	// Versioned direct deps
	implementation group: "org.hashids", name: "hashids", version: "1.0.3"
	implementation group: "org.liquibase", name: "liquibase-core", version: "4.0.0"
	implementation group: "org.springframework.cloud", name: "spring-cloud-gcp-starter-trace", version: "1.2.3.RELEASE"
	implementation group: "org.webjars", name: "webjars-locator-core", version: "0.46"
	runtimeOnly group: "org.postgresql", name: "postgresql", version: "42.2.14"

	// Deps whose versions are controlled by Spring
	implementation group: "javax.validation", name: "validation-api"
	implementation group: "org.apache.commons", name: "commons-dbcp2"
	implementation group: "org.apache.commons", name: "commons-lang3"
	implementation group: "org.apache.commons", name: "commons-pool2"
	implementation group: "org.springframework.boot", name: "spring-boot-starter-data-jdbc"
	implementation group: "org.springframework.boot", name: "spring-boot-starter-web"

	// Swagger deps
	implementation group: "io.swagger.core.v3", name: "swagger-annotations"
	runtimeOnly group: "org.webjars.npm", name: "swagger-ui-dist", version: "3.30.2"
	swaggerCodegen group: "io.swagger.codegen.v3", name: "swagger-codegen-cli"

	// Test deps
	testImplementation group: "com.google.auth", name: "google-auth-library-oauth2-http", version: "0.21.1"
	testImplementation group: "io.vavr", name: "vavr", version: "0.10.3"
	testImplementation(group: "org.springframework.boot", name: "spring-boot-starter-test") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
	testImplementation project(":workspace-manager-client")

	annotationProcessor group: "org.springframework.boot", name: "spring-boot-configuration-processor"
}

// Exclude the Spring logger, so everything will use SLF4J
configurations.all {
	exclude group: "commons-logging", module: "commons-logging"
}

// for scans
if (hasProperty("buildScan")) {
	buildScan {
		termsOfServiceUrl = "https://gradle.com/terms-of-service"
		termsOfServiceAgree = "yes"
	}
}

// Defs

def generatedResourceDir = "${resourceDir}/generated"
def openapiSourceDir = "${resourceDir}/api"

// OpenAPI/Swagger Server Generation

swaggerSources {
	server {
		inputFile = file("${openapiSourceDir}/service_openapi.yaml")
		code {
			language = "spring"
			library = "spring-boot"
			outputDir = file("${swaggerOutputDir}")
			components = ["models", "apis"]
			rawOptions = [
					"--api-package", "${artifactGroup}.generated.controller",
					"--model-package", "${artifactGroup}.generated.model",
					"-D", "interfaceOnly=true," +
							"useTags=true," +
							"dateLibrary=java8"
			]
		}
	}
}

// Testing config

test {
	useJUnitPlatform()
}

task unitTest(type: Test) {
	useJUnitPlatform {
		includeTags "unit"
	}
	testLogging {
		events = ["passed", "failed", "skipped", "started"]
	}
	outputs.upToDateWhen { false }
}

task integrationTest(type: Test) {
	useJUnitPlatform {
		includeTags "integration"
	}
	testLogging {
		events = ["passed", "failed", "skipped", "started"]
	}
	outputs.upToDateWhen { false }
}

spotless {
	java {
		googleJavaFormat()
		targetExclude "${buildDir}/**"
	}
}

// Custom tasks

task setGitVersion(type: WriteProperties) {
	outputFile = file("${generatedResourceDir}/version.properties")
	property("version.gitHash", versionDetails().gitHash)
	property("version.gitTag", gitVersion())
	property("version.build", version)
}

// Deploy config

jib {
	from {
		image = "adoptopenjdk:11-jre-hotspot"
	}
	container {
		filesModificationTime = java.time.ZonedDateTime.now().toString() // to prevent ui caching
	}
}

// Internal dependencies

sourceSets.main.java.srcDir "${swaggerOutputDir}/src/main/java"
compileJava.dependsOn swaggerSources.server.code, spotlessApply, setGitVersion

clean.dependsOn cleanSetGitVersion
