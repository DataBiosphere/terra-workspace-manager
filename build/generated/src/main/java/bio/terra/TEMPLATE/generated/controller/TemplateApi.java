/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package bio.terra.TEMPLATE.generated.controller;

import bio.terra.TEMPLATE.generated.model.ErrorReport;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-02-13T13:20:17.711576-05:00[America/New_York]")

@Validated
@Api(value = "Template", description = "the Template API")
public interface TemplateApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/template/v1/ping
     * Send a message and get it back in the response 
     *
     * @param message  (optional)
     * @return OK (status code 200)
     *         or common error response (status code 500)
     */
    @ApiOperation(value = "", nickname = "ping", notes = "Send a message and get it back in the response ", response = String.class, tags={ "template", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 500, message = "common error response", response = ErrorReport.class) })
    @RequestMapping(value = "/api/template/v1/ping",
        produces = { "text/plain", "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<String> ping(@ApiParam(value = "") @Valid @RequestParam(value = "message", required = false) String message) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
