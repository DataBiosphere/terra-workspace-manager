paths:
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/generateName:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Generate a cloud native controlled AWS S3 Storage Folder name.
      operationId: generateAwsS3StorageFolderCloudName
      tags: [ ControlledAwsResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAwsResourceCloudNameRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GenerateAwsResourceCloudNameResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled AWS S3 Storage Folder resource.
      operationId: createAwsS3StorageFolder
      tags: [ControlledAwsResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAwsS3StorageFolderRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAwsS3StorageFolderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/{resourceId}:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled AWS S3 Storage Folder resource.
      operationId: getAwsS3StorageFolder
      tags: [ControlledAwsResource]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAwsS3StorageFolderResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Delete controlled AWS S3 Storage Folder resource asynchronously.
      operationId: deleteAwsS3StorageFolder
      tags: [ControlledAwsResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAwsResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/delete-result/{jobId}:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an AWS S3 Storage Folder resource deletion job.
      operationId: getDeleteAwsS3StorageFolderResult
      tags: [ ControlledAwsResource ]
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAwsResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/{resourceId}/credential:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    - $ref: '#/components/parameters/AwsCredentialAccessScope'
    - $ref: '#/components/parameters/AwsCredentialDurationSeconds'
    get:
      summary: Get a credential to access this S3 Storage Folder resource in the AWS CLI or SDK.
      operationId: getAwsS3StorageFolderCredential
      tags: [ControlledAwsResource]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAwsS3StorageFolderCredentialResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    AwsS3StorageFolderCreationParameters:
      description: >-
        S3 Storage Folder specific properties to be set on creation. These are a subset of the
        values accepted by the AWS S3 Storage API.
      type: object
      properties:
        folderName:
          description: A valid folder name per https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html.
          type: string
        region:
          description: A valid S3 Storage Folder region per https://docs.aws.amazon.com/general/latest/gr/s3.html.
          type: string

    CreateControlledAwsS3StorageFolderRequestBody:
      description: Payload for requesting a new controlled AWS S3 Storage Folder resource.
      type: object
      required: [common, awsS3StorageFolder]
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        awsS3StorageFolder:
          $ref: '#/components/schemas/AwsS3StorageFolderCreationParameters'

    CreatedControlledAwsS3StorageFolder:
      description: Response Payload for requesting a new controlled AWS S3 Storage Folder resource.
      type: object
      required: [resourceId, awsS3StorageFolder]
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        awsS3StorageFolder:
          $ref: '#/components/schemas/AwsS3StorageFolderResource'

  responses:
    CreateControlledAwsS3StorageFolderResponse:
      description: Response to create controlled AWS S3 Storage Folder resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAwsS3StorageFolder'

    GetControlledAwsS3StorageFolderResponse:
      description: Response to get AWS S3 Storage Folder resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsS3StorageFolderResource'

    GetControlledAwsS3StorageFolderCredentialResponse:
      description: Response to get AWS S3 Storage Folder resource credential.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsCredential'
