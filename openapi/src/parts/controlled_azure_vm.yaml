paths:
  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Asynchronoulsy create a new controlled Azure VM
      operationId: createAzureVm
      tags: [ControlledAzureResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureVmRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureVmResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an Azure Vm create job.
      operationId: getCreateAzureVmResult
      tags: [ ControlledAzureResource ]
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureVmResponse'
        '202':
          $ref: '#/components/responses/CreateControlledAzureVmResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure VM resource
      operationId: getAzureVm
      tags: [ ControlledAzureResource ]
      responses:
        '200':
          description: Response to get vm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureVmResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: |
        Delete an azure Vm
      operationId: deleteAzureVm
      tags: [ControlledAzureResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an azure vm deletion job.
      operationId: getDeleteAzureVmResult
      tags: [ ControlledAzureResource ]
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    AzureVmCreationParameters:
      description: >-
        Vm-specific properties to be set on creation. These are a subset of the values
        accepted by the azure resource API
      type: object
      required: [name, region, diskId, networkId, vmSize, vmImage]
      properties:
        name:
          description: A valid vm name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
        region:
          description: |
            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.
            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())
          type: string
        vmSize:
          description: A valid image size as per com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes
          type: string
        ipId:
          description: A valid WSM identifier for an Azure Ip that corresponds to a valid azure resource
          type: string
          format: uuid
        diskId:
          description: A valid WSM identifier for an Azure Disk that corresponds to a valid azure resource
          type: string
          format: uuid
        networkId:
          description: A valid WSM identifier for an Azure Network that corresponds to a valid azure resource
          type: string
          format: uuid
        vmImage:
          description: A valid data which identifies the VM image
          $ref: '#/components/schemas/AzureVmImage'
        vmUser:
          description: A valid VM user data. This data is required only for marketplace VM image.
          $ref: '#/components/schemas/AzureVmUser'
        customScriptExtension:
          description: A custom script extension
          $ref: '#/components/schemas/AzureVmCustomScriptExtension'

    AzureVmImage:
      description: >-
        A valid data which identifies the VM image. It supports custom and marketplace images. Properties are mutually exclusive.
        Either Uri can be defined or publisher, offer, sku and version. Uri should be assigned in order to refer to custom image. Custom image must be in the same region.
        For instance /subscriptions/3efc5bdf-be0e-44e7-b1d7-c08931e3c16c/resourceGroups/mrg-qi-1-preview-20210517084351/providers/Microsoft.Compute/galleries/msdsvm/images/customized_ms_dsvm/versions/0.1.0
        In order to use marketplace image following properties should be defined: publisher, offer, sku and version. The allowed formats for version are Major.Minor.Build or 'latest'.
        For instance publisher=microsoft-dsvm, offer=ubuntu-1804, sku=1804-gen2, version=22.04.27
        If all parameters are defined then uri parameter will take precedence and vmUser parameter will be ignored.
      type: object
      properties:
        uri:
          description: A valid image Uri
          type: string
        publisher:
          description: A publisher of an image
          type: string
        offer:
          description: An offer of an image
          type: string
        sku:
          description: A sku of an image
          type: string
        version:
          description: A version of an image
          type: string

    AzureVmCustomScriptExtension:
      description: >-
        Azure VM custom script extension definition. Azure documentation https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/custom-script-linux
      type: object
      required: [name, publisher]
      properties:
        name:
          description: A name of the extension
          type: string
        publisher:
          description: A publisher of the extension
          type: string
        type:
          description: A type of the extension
          type: string
        version:
          description: A version of the extension
          type: string
        minorVersionAutoUpgrade:
          description: Flag which controls auto upgrade of the extension
          type: boolean
        publicSettings:
          description: List of public settings of the extension
          type: array
          items:
            $ref: '#/components/schemas/AzureVmCustomScriptExtensionSetting'
        protectedSettings:
          description: List of protected settings of the extension
          type: array
          items:
            $ref: '#/components/schemas/AzureVmCustomScriptExtensionSetting'
        tags:
          description: List of tags of the extension
          type: array
          items:
            $ref: '#/components/schemas/AzureVmCustomScriptExtensionTag'

    AzureVmCustomScriptExtensionSetting:
      description: Azure VM extension settings
      type: object
      required: [key, value]
      properties:
        key:
          description: Name of the settings entry
          type: string
        value:
          description: Value of the settings entry
          type: object

    AzureVmCustomScriptExtensionTag:
      description: List of tags for VM extension
      type: object
      required: [key, value]
      properties:
        key:
          description: Name of the tag
          type: string
        value:
          description: Value of the tag
          type: string

    AzureVmUser:
      description: User credentials which are required for VM creation
      type: object
      required: [name, password]
      properties:
        name:
          description: Specifies an SSH root user name for the Linux virtual machine
          type: string
        password:
          description: Specifies the SSH root password for the Linux virtual machine
          type: string

    CreateControlledAzureVmRequestBody:
      description: Payload for requesting a new controlled Azure VM resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureVm:
          $ref: '#/components/schemas/AzureVmCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'

    CreatedControlledAzureVmResult:
      description: Api result class for creating an azure vm
      type: object
      properties:
        azureVm:
          $ref: '#/components/schemas/AzureVmResource'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'

  responses:
    CreateControlledAzureVmResponse:
      description: Response to create controlled Azure Vm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAzureVmResult'
