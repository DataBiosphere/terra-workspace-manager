paths:
  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled AWS S3 Storage Folder
      operationId: createAwsStorageFolder
      tags: [ControlledAwsResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAwsStorageFolderRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledAwsStorageFolderResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/{resourceId}:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled AWS S3 Storage Folder resource
      operationId: getAwsStorageFolder
      tags: [ControlledAwsResource]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAwsStorageFolderResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete controlled AWS S3 Storage Folder resource
      operationId: deleteAwsStorageFolder
      tags: [ControlledAwsResource]
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/aws/storageFolder/{resourceId}/credential:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    - $ref: '#/components/parameters/AwsCredentialAccessScope'
    - $ref: '#/components/parameters/AwsCredentialDuration'
    get:
      summary: Get a credential to access this S3 Storage Folder in the AWS CLI or SDK
      operationId: getAwsStorageFolderCredential
      tags: [ControlledAwsResource]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAwsStorageFolderCredentialResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    CreatedControlledAwsStorageFolder:
      description: Response Payload for requesting a new controlled AWS S3 Storage Folder.
      type: object
      required: [resourceId, AwsStorageFolder]
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        AwsStorageFolder:
          $ref: '#/components/schemas/AwsStorageFolderResource'

    CreateControlledAwsStorageFolderRequestBody:
      description: Payload for requesting a new controlled AWS S3 Storage Folder resource.
      type: object
      required: [common, AwsStorageFolder]
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        AwsStorageFolder:
          $ref: '#/components/schemas/AwsStorageFolderCreationParameters'

    AwsStorageFolderCreationParameters:
      description: >-
        S3 Storage Folder specific properties to be set on creation. These are a subset of the
        values accepted by the AWS Storage API.
      type: object
      properties:
        region:
          description: A valid S3 Storage Folder region per https://docs.aws.amazon.com/general/latest/gr/s3.html.
          type: string

  responses:
    CreatedControlledAwsStorageFolderResponse:
      description: Response to Create controlled AWS S3 Storage Folder
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAwsStorageFolder'

    GetControlledAwsStorageFolderResponse:
      description: Response to get S3 Storage Folder
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsStorageFolderResource'

    GetControlledAwsStorageFolderCredentialResponse:
      description: Response to get S3 Storage Folder credential
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsCredential'
