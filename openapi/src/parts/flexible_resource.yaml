paths:
  /api/workspaces/v1/{workspaceId}/resources/controlled/any/flexibleResources:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled flexible resource.
      operationId: createFlexibleResource
      tags: [ ControlledFlexibleResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledFlexibleResourceRequestBody'
      responses:
        '200':
          description: Response to creating a controlled flexible resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedControlledFlexibleResource'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/any/flexibleResources/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled flexible resource.
      operationId: getFlexibleResource
      tags: [ ControlledFlexibleResource ]
      responses:
        '200':
          $ref: '#/components/responses/ControlledFlexibleResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled flexible resource.
      operationId: updateFlexibleResource
      tags: [ ControlledFlexibleResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledFlexibleResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/ControlledFlexibleResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a controlled flexible resource.
      operationId: deleteFlexibleResource
      tags: [ ControlledFlexibleResource ]
      responses:
        '204':
          description: Success
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/any/flexibleResources/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a flexible resource.
      operationId: cloneFlexibleResource
      tags: [ ControlledFlexibleResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneControlledFlexibleResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneControlledFlexibleResourceResponse'
        '202':
          $ref: '#/components/responses/CloneControlledFlexibleResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    CloneControlledFlexibleResourceResult:
      description: Result of successful flexible resource clone.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: Workspace ID of the source resource for this clone.
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource.
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/FlexibleResource'

    CloneControlledFlexibleResourceRequest:
      description: >-
        Values to be assigned with the cloned flex resource for a given source flex resource.
        Only COPY_RESOURCE and COPY_NOTHING are defined for flex resources.
        Set name and description null to maintain the original values.
      type: object
      required: [ destinationWorkspaceId]
      properties:
        destinationWorkspaceId:
          description: ID of workspace to be cloned into
          type: string
          format: uuid
        cloningInstructions:
          $ref: "#/components/schemas/CloningInstructionsEnum"
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string

    CreatedControlledFlexibleResource:
      description: Response payload for requesting a new controlled flexible resource.
      type: object
      required: [ resourceId, flexibleResource ]
      properties:
        resourceId:
          description: UUID of newly-created resource.
          type: string
          format: uuid
        flexibleResource:
          $ref: '#/components/schemas/FlexibleResource'
    CreateControlledFlexibleResourceRequestBody:
      description: Payload for requesting a new controlled flexible resource.
      type: object
      required: [ common, flexibleResource ]
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        flexibleResource:
          $ref: '#/components/schemas/ControlledFlexibleResourceCreationParameters'
    ControlledFlexibleResourceCreationParameters:
      description: Properties specific to flexible resource set on creation.
      type: object
      required: [ typeNamespace, type ]
      properties:
        typeNamespace:
          description: Namespace of the type; e.g., 'terra'
          type: string
        type:
          description: Type of the flexible resource.
          type: string
        data:
          description: JSON encoded in base 64.
          type: string
          format: byte
    FlexibleResourceUpdateParameters:
      description: >-
        Parameters that may be changed by a user.
      properties:
        data:
          description: JSON encoded in base 64.
          type: string
          format: byte
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'

    UpdateControlledFlexibleResourceRequestBody:
      type: object
      description: Update a flexible resource's metadata and attributes (type, data, and the type's namespace). This operation completely overrides the data field (if specified in the update parameters).
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource description will not be updated if this is omitted.
          type: string
        updateParameters:
          $ref: '#/components/schemas/FlexibleResourceUpdateParameters'

  responses:
    CloneControlledFlexibleResourceResponse:
      description: Response for successful flexible resource clone.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneControlledFlexibleResourceResult'
    ControlledFlexibleResourceResponse:
      description: Response containing a controlled flexible resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FlexibleResource'