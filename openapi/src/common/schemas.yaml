# Common schemas
# These schemas should be referenced from the source like this:
#  $ref: '#/components/schemas/<item-you-want>
components:
  schemas:
    AccessScope:
      type: string
      description: Specifies the resource as shared or private
      enum: ['SHARED_ACCESS', 'PRIVATE_ACCESS']

    CloudPlatform:
      type: string
      description: Enum representing a cloud platform type.
      enum: ['GCP', 'AZURE']

    CloneReferencedResourceRequestBody:
      description: >-
        Cloning options for referenced resources. If optional parameters are omitted,
        the source values will be used.
      type: object
      required: [destinationWorkspaceId]
      properties:
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        destinationWorkspaceId:
          type: string
          format: uuid
          # Null for original name
        name:
          $ref: "#/components/schemas/Name"
        description:
          description: Description for the referenced resource clone, or null to use original.
          type: string

    CloningInstructionsEnum:
      type: string
      description: >-
        How to clone resource:
          * COPY_NOTHING: Don't clone resource.
          * COPY_DEFINITION: Only used for controlled resources. Create new controlled resource
            and new cloud resource with same metadata, but don't copy any data. For example
            for GCS bucket, create new GCS bucket with same region/lifecycle rules as source
            bucket. Files will not be copied over.
          * COPY_RESOURCE: Only used for controlled resources. Create new controlled resource
            and new cloud resource, with data copied over.  For example for GCS bucket,
            create new GCS bucket with same region/lifecycle rules as source bucket. Copy files
            from source bucket to new bucket.
          * COPY_REFERENCE: Used for controlled and referenced resources. Create new referenced resource
            that points to same cloud resource as source resource.
          * COPY_LINK_REFERENCE: Used for controlled and referenced resources. Create a new referenced resource
            that points to the same cloud resource as the source resource, AND link the source workspace
            policy to the destination workspace policy; changes in the source will propagate to the destination.
      enum:
        - COPY_NOTHING
        - COPY_DEFINITION
        - COPY_RESOURCE
        - COPY_REFERENCE
        - COPY_LINK_REFERENCE
  
    ControlledResourceIamRole:
      description: Enum containing all IAM roles on controlled resources available to users
      type: string
      enum: [ 'READER', 'WRITER', 'EDITOR']
  
    ControlledResourceMetadata:
      type: object
      properties:
        accessScope:
          $ref: '#/components/schemas/AccessScope'
        managedBy:
          $ref: '#/components/schemas/ManagedBy'
        privateResourceUser:
          $ref: '#/components/schemas/PrivateResourceUser'
        privateResourceState:
          $ref: '#/components/schemas/PrivateResourceState'
        region:
          description: |
            A valid region string representation of the cloud resource.
          type: string
  
    ControlledResourceCommonFields:
      type: object
      required: [ name, cloningInstructions, accessScope, managedBy ]
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        accessScope:
          $ref: '#/components/schemas/AccessScope'
        managedBy:
          $ref: '#/components/schemas/ManagedBy'
        privateResourceUser:
          $ref: '#/components/schemas/PrivateResourceUser'
        resourceId:
          type: string
          format: uuid
        properties:
          $ref: '#/components/schemas/Properties'

    DefaultTableLifetime:
      description: Optional. Default lifetime (in seconds) for newly created tables.
      type: integer
      format: int64

    DefaultPartitionLifetime:
      description: Optional. Default lifetime (in seconds) for partitions in newly created partitioned tables.
      type: integer
      format: int64

    ErrorReport:
      type: object
      required: [message, statusCode, causes]
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string

    JobReport:
      type: object
      required: [id, status, statusCode, resultURL]
      properties:
        id:
          description: caller-provided unique identifier for the job
          type: string
        description:
          description: caller-provided description of the job
          type: string
        status:
          description: status of the job
          type: string
          enum: [RUNNING, SUCCEEDED, FAILED]
        statusCode:
          description: HTTP code providing status of the job.
          type: integer
        submitted:
          description: timestamp when the job was submitted; in ISO-8601 format
          type: string
        completed:
          description: >-
            timestamp when the job completed - in ISO-8601 format. Present if
            status is SUCCEEDED or FAILED.
          type: string
        resultURL:
          description: >-
            URL where the result of the job can be retrieved. Equivalent to a
            Location header in HTTP.
          type: string
  
    JobControl:
      type: object
      required: [id]
      properties:
        id:
          description: >-
            Unique identifier for the job. Best practice is for job identifier to be a UUID,
            a ShortUUID, or other globally unique identifier.
          type: string
        # TODO: In the future, notification configuration will also be part of JobControl.
  
      
    ManagedBy:
      type: string
      description: Specifies the controller of the resource, workspace users or an application
      enum: [ 'USER', 'APPLICATION' ]
  
    Name:
      type: string
      pattern: '^[a-zA-Z0-9][-_a-zA-Z0-9]{0,1023}$'

    PrivateResourceUser:
      description: >-
        This text describes the target state:
        Applications may optionally specify a workspace user to have access to the private
        resource by providing this element. If this element is not specified, workspace
        users will have no direct access to the associated cloud resource. If this element
        is specified both fields are required.
      type: object
      required: [userName, privateResourceIamRole]
      properties:
        userName:
          description: email of the workspace user to grant access
          type: string
        privateResourceIamRole:
          $ref: '#/components/schemas/ControlledResourceIamRole'
  
    PrivateResourceState:
      description: >-
        The possible states of ownership of a private resource. When a resource is abandoned, the
        assigned user loses permission to access it.
      type: string
      enum:
      - ABANDONED
      - ACTIVE
      - INITIALIZING
      - NOT_APPLICABLE
  
    ReferenceResourceCommonFields:
      type: object
      required: [name, cloningInstructions]
      description: Common information used in all reference requests
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        properties:
          $ref: '#/components/schemas/Properties'
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'

    ResourceLineage:
      type: array
      items:
        $ref: '#/components/schemas/ResourceLineageEntry'

    ResourceLineageEntry:
      type: object
      required: [sourceWorkspaceId, sourceResourceId]
      description: Resource lineage entry describing a single clone operation
      properties:
        sourceWorkspaceId:
          type: string
          format: uuid
        sourceResourceId:
          type: string
          format: uuid

    # All resource objects include this resource metadata object and call it 'metadata'
    ResourceMetadata:
      type: object
      required: [workspaceId, resourceId, name, resourceType, stewardshipType, createdBy, createdDate, lastUpdatedBy, lastUpdatedDate]
      properties:
        workspaceId:
          type: string
          format: uuid
        resourceId:
          type: string
          format: uuid
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        stewardshipType:
          $ref: '#/components/schemas/StewardshipType'
        cloudPlatform:
          $ref: '#/components/schemas/CloudPlatform'
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        controlledResourceMetadata:
          description: Present if stewardship type is CONTROLLED
          $ref: '#/components/schemas/ControlledResourceMetadata'
        resourceLineage:
          $ref: '#/components/schemas/ResourceLineage'
        properties:
          $ref: '#/components/schemas/Properties'
        createdBy:
          description: User email of whom created the resource
          type: string
        createdDate:
          description: Timestamp when the resource is created
          type: string
          format: date-time
        lastUpdatedBy:
          description: User email of whom last updated the resource
          type: string
        lastUpdatedDate:
          description: Timestamp where the resource was last updated
          type: string
          format: date-time
        state:
          $ref: '#/components/schemas/State'
        errorReport:
          # Null if the object is not in a broken state
          $ref: '#/components/schemas/ErrorReport'
        jobId:
          # Null if the no WSM operation is running on the object (create, update, delete)
          type: string

    State:
      type: string
      description: WSM object state
      enum: ['BROKEN', 'CREATING', 'DELETING', 'READY', 'UPDATING']

    StewardshipType:
      description: Enum containing valid stewardship types. Used for enumeration
      type: string
      enum: ['REFERENCED', 'CONTROLLED']

    FolderId:
      description: Id of a given folder. Unique and immutable within a workspace.
      type: string
      format: uuid

    Properties:
      description: Optional list of key-value pairs of strings
      type: array
      items:
        $ref: '#/components/schemas/Property'

    Property:
      type: object
      required: [ key, value ]
      properties:
        key:
          description: |
            String to identify the key. Keys must be 1-1024 characters, using letters,
            numbers, dashes, and underscores and must not start with a dash or underscore.
          type: string
        value:
          description: Arbitrary string value
          type: string

    PropertyKeys:
      description: A list of property keys that in the properties
      type: array
      items:
        type: string

    JobResult:
      type: object
      description: |
        The result of an async call that triggers a stairway job in WSM.
      required: [jobReport]
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'

    Regions:
      type: array
      description: List of regions (e.g. us-central1, us-west1)
      items:
        uniqueItems: true
        type: string
