buildscript {
    ext {
        springBootVersion = '2.4.0'
    }
    apply(from: "$rootDir/common.gradle")
}

plugins {
    id "idea"
    id "java"
    id 'jacoco'

    id "com.diffplug.spotless" version "5.12.4"
    id "com.github.ben-manes.versions" version "0.36.0"
    id "com.google.cloud.tools.jib" version "3.0.0"
    id "de.undercouch.download" version "4.1.1"
    id "org.hidetake.swagger.generator" version "2.18.2"
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
    id 'ru.vyarus.quality' version '4.5.0'
}

project.group = 'bio.terra'
project.version = gradle.wsmVersion
project.sourceCompatibility = JavaVersion.VERSION_11

project.ext {
    artifactGroup = "${group}.workspace"
    openapiOutputDir = "${buildDir}/openapi"
    resourceDir = "${projectDir}/src/main/resources"
}

def includeDir = "$projectDir/gradle"
// include order matters, so don't alphabetize (yet)
apply(from: "$includeDir/buildScan.gradle")
apply(from: "$includeDir/profiler.gradle")
apply(from: "$includeDir/deploy.gradle")
apply(from: "$includeDir/lint.gradle")
apply(from: "$includeDir/openapi.gradle")
apply(from: "$includeDir/versionProperties.gradle")

// Manual Task Dependencies
dependencies {
    // Google dependencies
    constraints {
        implementation 'com.google.guava:guava:30.1.1-jre' // "-jre" for Java 8 or higher
    }
    implementation platform('com.google.cloud:libraries-bom:20.2.0')
    implementation group: "com.google.auto.value", name: "auto-value-annotations"
    implementation group: "com.google.guava", name:"guava"

    // Terra deps
    implementation group: "bio.terra", name: "datarepo-client", version: "1.41.0-SNAPSHOT"
    // hk2 is required to use datarepo client, but not correctly exposed by the client
    implementation group: "org.glassfish.jersey.inject", name: "jersey-hk2", version: "2.32"

    implementation group: "bio.terra", name: "stairway", version: "0.0.52-SNAPSHOT"
    implementation group: "bio.terra", name: "terra-common-lib", version: "0.0.47-SNAPSHOT"
    implementation group: 'bio.terra.cloud-resource-lib', name: 'google-bigquery', version: '0.11.0'
    implementation group: 'bio.terra.cloud-resource-lib', name: 'google-billing', version: '0.10.0'
    implementation group: 'bio.terra.cloud-resource-lib', name: 'google-cloudresourcemanager', version: '1.3.0'
    implementation group: 'bio.terra.cloud-resource-lib', name: 'google-compute', version: '0.11.0'
    implementation group: 'bio.terra.cloud-resource-lib', name: 'google-iam', version: '0.10.0'
    implementation group: 'bio.terra.cloud-resource-lib', name: 'google-notebooks', version: '0.8.0'
    implementation group: 'bio.terra.cloud-resource-lib', name: 'google-serviceusage', version: '0.10.0'
    implementation group: 'bio.terra.cloud-resource-lib', name: 'google-storage', version: '0.12.0'
    implementation group: "org.broadinstitute.dsde.workbench", name: "sam-client_2.12", version: "0.1-61135c7"
    implementation group: "bio.terra", name: "terra-resource-buffer-client", version: "0.4.3-SNAPSHOT"

    // Versioned direct deps
    implementation group: "org.hashids", name: "hashids", version: "1.0.3"
    implementation group: "org.liquibase", name: "liquibase-core", version: "4.2.1"
    implementation group: "org.webjars", name: "webjars-locator-core", version: "0.46"
    runtimeOnly group: "org.postgresql", name: "postgresql", version: "42.2.18"

    // For SpotBugs annotations (still FindBugs annotations)
    implementation 'com.google.code.findbugs:annotations:3.0.1'

    // Deps whose versions are controlled by Spring
    implementation group: "javax.validation", name: "validation-api"
    implementation group: "org.apache.commons", name: "commons-dbcp2"
    implementation group: "org.apache.commons", name: "commons-lang3"
    implementation group: "org.apache.commons", name: "commons-pool2"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-data-jdbc"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-web"

    // OpenAPI (swagger) deps
    implementation gradle.librarySwaggerAnnotations
    swaggerCodegen gradle.librarySwaggerCli
    runtimeOnly group: "org.webjars.npm", name: "swagger-ui-dist", version: "3.37.2"

    // Test deps
    testImplementation group: "com.google.auth", name: "google-auth-library-oauth2-http", version: "0.22.1"
    testImplementation group: "io.vavr", name: "vavr", version: "0.10.3"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }

    testImplementation project(":client")

    annotationProcessor group: "com.google.auto.value", name: "auto-value", version: "1.7.4"
    annotationProcessor group: "org.springframework.boot", name: "spring-boot-configuration-processor", version: "2.4.0"
}

// Testing Tasks Configuration

// The path to the default Google service account for the Workspace Manager to run as.
// Created by render_config.sh
def googleCredentialsFile = "${projectDir}/rendered/service-account.json"
bootRun {
    environment = [
            'GOOGLE_APPLICATION_CREDENTIALS': "${googleCredentialsFile}"
    ]
}
tasks.withType(Test) {
    environment = [
            'GOOGLE_APPLICATION_CREDENTIALS': "${googleCredentialsFile}"
    ]
}

jacocoTestReport {
    reports {
        xml.enabled = true
        xml.destination = file("$buildDir/reports/jacoco/test/jacoco.xml")
    }
    dependsOn test
}

// default test to unit tests so the build target succeeds
test {
    useJUnitPlatform {
        includeTags "unit"
    }
}

task unitTest(type: Test) {
    useJUnitPlatform {
        includeTags "unit"
    }
    testLogging {
        events = ["passed", "failed", "skipped", "started"]
    }
    outputs.upToDateWhen { false }
    finalizedBy jacocoTestReport
}

task connectedTest(type: Test) {
    environment.put('TEST_ENV', System.getenv("TEST_ENV"))
    useJUnitPlatform {
        includeTags "connected"
    }
    testLogging {
        events = ["passed", "failed", "skipped", "started"]
    }
    outputs.upToDateWhen { false }
}


task integrationTest(type: Test) {
    environment.put('TEST_ENV', System.getenv("TEST_ENV"))
    useJUnitPlatform {
        includeTags "integration"
    }
    testLogging {
        events = ["passed", "failed", "skipped", "started"]
    }
    outputs.upToDateWhen { false }
}

jacoco {
    toolVersion = '0.8.2'
}

tasks.compileJava.dependsOn(swaggerSources.server.code, spotlessApply, generateVersionProperties)
tasks.jib.dependsOn extractProfilerAgent
tasks.jibDockerBuild.dependsOn extractProfilerAgent
tasks.jibBuildTar.dependsOn extractProfilerAgent
tasks.clean.dependsOn cleanVersionProperties
