# All env variables that are used in one place
# This is for deployment-specific values, which may be managed by other teams
env:
  db:
    host: jdbc:postgresql://${DATABASE_HOSTNAME:127.0.0.1}:5432
    init: ${INIT_DB:false}
    stairway:
      name: ${STAIRWAY_DATABASE_NAME:wsm_stairway}
      pass: ${STAIRWAY_DATABASE_USER_PASSWORD:stairwaypwd}
      user: ${STAIRWAY_DATABASE_USER:stairwayuser}
    ws:
      name: ${DATABASE_NAME:wsm_db}
      pass: ${DATABASE_USER_PASSWORD:dbpwd}
      user: ${DATABASE_USER:dbuser}
    policy:
      name: ${POLICY_DATABASE_NAME:policy_db}
      pass: ${POLICY_DATABASE_USER_PASSWORD:dbpwd}
      user: ${POLICY_DATABASE_USER:dbuser}
    landingzone:
      name: ${LANDINGZONE_DATABASE_NAME:landingzone_db}
      pass: ${LANDINGZONE_DATABASE_USER_PASSWORD:landingzonepwd}
      user: ${LANDINGZONE_DATABASE_USER:landingzoneuser}
    landingzonestairway:
      name: ${LANDINGZONE_STAIRWAY_DATABASE_NAME:landingzone_stairway_db}
      pass: ${LANDINGZONE_STAIRWAY_DATABASE_USER_PASSWORD:landingzonestairwaypwd}
      user: ${LANDINGZONE_STAIRWAY_DATABASE_USER:landingzonestairwayuser}
  tracing:
    exportEnabled: ${CLOUD_TRACE_ENABLED:false}
    samplingRate: ${SAMPLING_PROBABILITY:0}
  urls: # While we've traditionally thought of these as env specific and ok to hardcode, with kubernetes they may change
    sam: ${SAM_ADDRESS:https://sam.dsde-dev.broadinstitute.org/}
    terra-datarepo: ${TERRA_DATAREPO_URL:https://jade.datarepo-dev.broadinstitute.org}
    bpm: ${BPM_ADDRESS:https://bpm.dsde-dev.broadinstitute.org/}

# Below here is non-deployment-specific

# When the target is 'local' the write-config.sh script will generate this properties file. It
# contains the configuration of the WSM test application. We can use that application in our
# integration testing to make sure the application code paths are working. However, we do not
# want it to appear in production environments.
# Imports are treated as additional documents inserted below this one, so the
# properties in local-properties are guaranteed to override values here in application.yml
spring.config.import: optional:file:../config/local-properties.yml

logging.pattern.level: '%X{requestId} %5p'

server:
  compression:
    enabled: true
    mime-types: text/css,application/javascript
  port: 8080

spring:
  application.name: workspace
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 0
          must-revalidate: true
        use-last-modified: false
      static-locations: classpath:/api/
workspace:
  datarepo.instances:
    terra: ${env.urls.terra-datarepo}
  ingress:
    # Default value that's overridden by Helm.
    domain-name: localhost:8080

  job:
    max-threads: 4
    polling-interval-seconds: 1
    resource-id: mc-terra-workspace-manager
    timeout-seconds: 1800

  private-resource-cleanup:
    enabled: true
    polling-interval: "15m"
    startup-wait: "5s"

  sam.base-path: ${env.urls.sam}

  stairway-database:
    password: ${env.db.stairway.pass}
    uri: ${env.db.host}/${env.db.stairway.name}
    username: ${env.db.stairway.user}

  status-check:
    enabled: true
    polling-interval-seconds: 60
    startup-wait-seconds: 5
    staleness-threshold-seconds: 125

  workspace-database:
    initialize-on-start: ${env.db.init}
    password: ${env.db.ws.pass}
    upgrade-on-start: true
    uri: ${env.db.host}/${env.db.ws.name}
    username: ${env.db.ws.user}

  # Local servers will point to Tools RBS by default using config generated by ${rootdir}/scripts/write-config.sh
  # These values may be overridden by Helm.
  buffer:
    enabled: true
    client-credential-file-path: ../config/buffer-client-sa.json
    instanceUrl: https://buffer.tools.integ.envs.broadinstitute.org
    poolId: workspace_manager_v9

  spend:
    spend-profiles:
    - # A default spend profile available in dev Sam.
      id: wm-default-spend-profile
      # The billing account workspace-dev has access to.
      billing-account-id: 01A82E-CA8A14-367457
    - # A special spend profile with no billing account associated with it.
      id: no-billing-account

  application:
    configurations:
      leo:
        name: Leonardo
        description: Leonardo application SA
        service-account: leonardo-prod@broad-dsde-prod.iam.gserviceaccount.com
        state: operating

  azure:
    sas-token-start-time-minutes-offset: 15
    sas-token-expiry-time-minutes-offset: 60
    sas-token-expiry-time-maximum-minutes-offset: 1440
    cors-allowed-origins:

terra.common:
  kubernetes:
    in-kubernetes: false
  stairway:
    cluster-name-suffix: workspace-stairway
    force-clean-start: false # ${env.db.init}
    max-parallel-flights: 50
    migrate-upgrade: true
    quiet-down-timeout: 30s
    terminate-timeout: 30s
    tracing-enabled: true
    retention-check-interval: 1d
    completed-flight-retention: 7d

  tracing:
    stackdriverExportEnabled: ${env.tracing.exportEnabled}
    samplingRate: ${env.tracing.samplingRate}

# Terra Policy Service configuration
policy:
  policy-database:
    initialize-on-start: ${env.db.init}
    password: ${env.db.policy.pass}
    upgrade-on-start: true
    uri: ${env.db.host}/${env.db.policy.name}
    username: ${env.db.policy.user}

#Terra Landing Zone Service configuration
landingzone:
  landingzone-database:
    initialize-on-start: ${env.db.init}
    password: ${env.db.landingzone.pass}
    upgrade-on-start: true
    uri: ${env.db.host}/${env.db.landingzone.name}
    username: ${env.db.landingzone.user}
  landingzone-stairway-database:
    initialize-on-start: ${env.db.init}
    password: ${env.db.landingzonestairway.pass}
    upgrade-on-start: true
    uri: ${env.db.host}/${env.db.landingzonestairway.name}
    username: ${env.db.landingzonestairway.user}
  stairway:
    cluster-name-suffix: landingzone-stairway
    force-clean-start: false # ${env.db.init}
    max-parallel-flights: 50
    migrate-upgrade: true
    quiet-down-timeout: 30s
    terminate-timeout: 30s
    tracing-enabled: true
    retention-check-interval: 1d
    completed-flight-retention: 7d
  sam.base-path: ${env.urls.sam}
  bpm.base-path: ${env.urls.bpm}

# Feature flags
# The general rule is that feature flags should be set here in their production setting
# and overridden in non-production environments.
#
# Feature flags can be overridden like any other Spring property. In particular, for local
# execution, you can set an environment variable, such as:
#
#  FEATURE_AZUREENABLED=true
#
# The WSM helm chart will take all values under the "env" and make them environment variables
# in the container, so you can get the equivalent setting by adding:
#
#  env:
#    FEATURE_AZUREENABLED: true
#
# into the appropriate values file. That includes the values file in local_dev.
feature:
  # azure-enabled - Controls inclusion of Azure support in WSM
  azure-enabled: true
  # alpha1-enabled - Controls support of the Alpha1 experimental API and service
  alpha1-enabled: false
  # tps-enabled - Controls whether Terra Policy Service is called. It is always built into WSM
  tps-enabled: false

reference:
  gitrepos:
    allow-listed-git-repo-host-names:
      - github.com
      - gitlab.com
      - bitbucket.org
      - dev.azure.com
      - ssh.dev.azure.com

