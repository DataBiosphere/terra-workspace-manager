# DEVELOPER NOTES
#
# There are three sections of the file bracketed with ## ## that are deprecated. They are the
# data references interface that we abandoned in favor of the unified resources interface.
#
# CLOUD RESOURCE STRUCTURE
# Each cloud resource has a structure named '{cloud}{resource-type}Resource';
# for example, GcpGcsBucketResource. It has two properties: 'metadata' and 'attributes'
#
# The 'metadata' property is a reference to the common metadata structure for all resource types:
#  $ref: '#/components/schemas/ResourceMetadata'
# Metadata includes both the common data for all resources and an optional structure for
# properties of controlled resources.
#
# The 'attributes' property is a reference to a unique structure named '{resource-type}Attributes';
# for example, GcpGcsBucketAttributes. Attributes are specific to the cloud resource so may
# be a complex structure.
#
# The resource structure should be used as the common form of return in the CRUD operations on
# the object. Well, the CRU ones anyway...
#
# ENUMERATION STRUCTURE
# Resource enumeration returns ResourceList - a list of ResourceDescription. Each description
# provides the common metadata, as described above and then a union structure with an entry
# for the metadata for each cloud resource type. It is a bit clumsy, but provides complete
# description for a resource.
#

openapi: 3.0.3
info:
  title: Workspace Manager API
  description: Workspace Manager REST API to manage workspaces.
  version: 0.0.1

paths:
  # Unauthenticated Paths
  /status:
    get:
      security: []
      summary: Returns the operational status of the service
      operationId: serviceStatus
      tags: [Unauthenticated]
      responses:
        '200':
          description: Service can process requests
        '500':
          description: |
            Service cannot process requests. That might be because dependent services are
            unavailable, or because there is a problem with the service itself.
  /version:
    get:
      security: []
      summary: Returns the deployed version of the service
      operationId: serviceVersion
      tags: [Unauthenticated]
      responses:
        '200':
          description: System version response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemVersion'

  # Workspace paths
  /api/workspaces/v1:
    post:
      summary: Create a new Workspace.
      operationId: createWorkspace
      tags: [Workspace]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatedWorkspaceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/NotFound'
    get:
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      summary: List all workspaces a user can read.
      operationId: listWorkspaces
      tags: [ Workspace ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDescriptionList'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    get:
      summary: Get an existing Workspace.
      operationId: getWorkspace
      tags: [Workspace]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update an existing Workspace.
      operationId: updateWorkspace
      tags: [Workspace]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a Workspace.
      operationId: deleteWorkspace
      tags: [Workspace]
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/applications:
    get:
      parameters:
        - $ref: '#/components/parameters/WorkspaceId'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      summary: List all applications and whether they are enabled on a workspace
      operationId: listWorkspaceApplications
      tags: [WorkspaceApplication]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceApplicationDescriptionList'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/applications/{applicationId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ApplicationId'
    get:
      summary: Get an application and its state in this workspace
      operationId: getWorkspaceApplication
      tags: [WorkspaceApplication]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceApplicationDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/applications/{applicationId}/disable:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ApplicationId'
    post:
      summary: Disable an application in a workspace
      operationId: disableWorkspaceApplication
      tags: [WorkspaceApplication]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceApplicationDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/applications/{applicationId}/enable:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ApplicationId'
    post:
      summary: Enable an application in a workspace
      operationId: enableWorkspaceApplication
      tags: [WorkspaceApplication]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceApplicationDescription'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Clone a workspace and its eligible resources
      operationId: cloneWorkspace
      tags: [Workspace]
      requestBody:
        description: Details of workspce clone operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneWorkspaceRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneWorkspaceResponse'
        '202':
          $ref: '#/components/responses/CloneWorkspaceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/clone-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a gcp bucket clone job.
      operationId: getCloneWorkspaceResult
      tags: [Workspace]
      responses:
        '200':
          $ref: '#/components/responses/CloneWorkspaceResponse'
        '202':
          $ref: '#/components/responses/CloneWorkspaceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'


  ## DEPRECATED PATHS ##
  # TODO(PF-404): remove this in favor of reference-type specific objects.
  /api/workspaces/v1/{workspaceId}/datareferences:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      deprecated: true
      summary: (DEPRECATED) Create a new data reference in a workspace.
      operationId: createDataReference
      tags: [Workspace]
      requestBody:
        required: true
        description: Stuff TBD
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/DataReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      deprecated: true
      summary: (DEPRECATED) Enumerate the data references in a workspace.
      operationId: enumerateReferences
      tags: [Workspace]
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/ReferenceListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  # TODO(PF-404): remove this in favor of reference-type specific objects.
  /api/workspaces/v1/{workspaceId}/datareferences/{referenceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ReferenceId'
    get:
      deprecated: true
      summary: (DEPRECATED) Gets a data reference from a workspace.
      operationId: getDataReference
      tags: [Workspace]
      responses:
        '200':
          $ref: '#/components/responses/DataReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      deprecated: true
      summary: (DEPRECATED) Update name or description of a data reference in a workspace.
      operationId: updateDataReference
      tags: [Workspace]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      deprecated: true
      summary: (DEPRECATED) Deletes a data reference from a workspace.
      operationId: deleteDataReference
      tags: [Workspace]
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  # TODO(PF-404): remove this in favor of reference-type specific objects.
  /api/workspaces/v1/{workspaceId}/datareferences/{referenceType}/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ReferenceType'
      - $ref: '#/components/parameters/Name'
    get:
      deprecated: true
      summary: (DEPRECATED) Gets a data reference from a workspace by name and type.
      operationId: getDataReferenceByName
      tags: [Workspace]
      responses:
        '200':
          $ref: '#/components/responses/DataReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  ## END OF DEPRECATED PATHS ##

  # TODO(zloery): This endpoint is exposed as a workaround to support the CLI's
  # use of Nextflow. It will likely be removed in the future in favor of other
  # cloud sync methods.
  /api/workspaces/v1/{workspaceId}/gcp/enablepet:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Allow a user to impersonate their pet SA in a given workspace
      description: |
        This endpoint is exposed as a workaround to support calling Google
        Pipelines API in a workspace. It will likely be removed in the future in
        favor of other cloud sync methods.
      operationId: enablePet
      tags: [ Workspace ]
      responses:
        '200':
          $ref: '#/components/responses/EnablePetSaResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Offset'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/ResourceType'
      - $ref: '#/components/parameters/StewardshipType'
    get:
      summary: |
        Enumerate resources in a workspace. The visible resources depend on the permissions of the caller.
        These are presented sorted by ascending resource name. The offset and limit parameters allow paging
        through the results. You can also filter by a resource type and by a stewardship type.
      operationId: enumerateResources
      tags: [Resource]
      responses:
        '200':
          $ref: '#/components/responses/EnumerateResourcesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/referenced/{resourceId}/access:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Check a user's access to a referenced resource
      operationId: checkReferenceAccess
      tags: [Resource]
      responses:
        '200':
          $ref: '#/components/responses/CheckReferenceAccessResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new data repo snapshot reference in a workspace.
      operationId: createDataRepoSnapshotReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataRepoSnapshotReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a snapshot from a workspace.
      operationId: getDataRepoSnapshotReference
      tags: [ReferencedGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      deprecated: true
      summary: (DEPRECATED) Update name or description of a snapshot reference in a workspace.
      operationId: updateDataRepoSnapshotReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Update name, description or referencing target of a snapshot reference in a workspace.
      operationId: updateDataRepoSnapshotReferenceResource
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataRepoSnapshotReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete datarepo snapshot reference
      operationId: deleteDataRepoSnapshotReference
      tags: [ReferencedGcpResource]
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a referenced Data Repo Snapshot resource
      operationId: cloneGcpDataRepoSnapshotReference
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGcpDataRepoSnapshotResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/referenced/datarepo/snapshots/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a snapshot by name.
      operationId: getDataRepoSnapshotReferenceByName
      tags: [ReferencedGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/DataRepoSnapshotReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new GCS object reference in a workspace.
      operationId: createGcsObjectReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGcpGcsObjectReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects/{resourceId}:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a GCS object from a workspace.
      operationId: getGcsObjectReference
      tags: [ReferencedGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      deprecated: true
      summary: (DEPRECATED) Update name or description of a bucket object reference in a workspace.
      operationId: updateGcsObjectReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Update name, description or referencing target of a bucket object reference in a workspace.
      operationId: updateBucketObjectReferenceResource
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGcsBucketObjectReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete Gcp GCS object reference
      operationId: deleteGcsObjectReference
      tags: [ReferencedGcpResource]
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects/{resourceId}/clone:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a referenced GCS object resource
      operationId: cloneGcpGcsObjectReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGcpGcsObjectResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bucket/objects/name/{name}:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a Gcp GCS object by name.
      operationId: getGcsObjectReferenceByName
      tags: [ReferencedGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsObjectReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new GCS bucket reference in a workspace.
      operationId: createBucketReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGcpGcsBucketReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a bucket from a workspace.
      operationId: getBucketReference
      tags: [ReferencedGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      deprecated: true
      summary: (DEPRECATED) Update name or description of a bucket reference in a workspace.
      operationId: updateBucketReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Update name, description or the referencing target of a bucket reference in a workspace
      operationId: updateBucketReferenceResource
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGcsBucketReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete Gcp bucket reference
      operationId: deleteBucketReference
      tags: [ReferencedGcpResource]
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a referenced GCS Bucket resource
      operationId: cloneGcpGcsBucketReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGcpGcsBucketResourceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/buckets/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a Gcp bucket by name.
      operationId: getBucketReferenceByName
      tags: [ReferencedGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/GcpGcsBucketReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new BigQuery data table reference in a workspace.
      operationId: createBigQueryDataTableReference
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGcpBigQueryDataTableReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables/{resourceId}:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a BigQuery data table from a workspace.
      operationId: getBigQueryDataTableReference
      tags: [ ReferencedGcpResource ]
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      deprecated: true
      summary: (DEPRECATED) Update name or description of a BigQuery data table reference in a workspace.
      operationId: updateBigQueryDataTableReference
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Update name, description or referencing target of a BigQuery data table reference in a workspace.
      operationId: updateBigQueryDataTableReferenceResource
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBigQueryDataTableReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete BigQuery data table reference
      operationId: deleteBigQueryDataTableReference
      tags: [ ReferencedGcpResource ]
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables/{resourceId}/clone:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a BigQuery Data table
      operationId: cloneGcpBigQueryDataTableReference
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGcpBigQueryDataTableResourceResponse'
        '202':
          $ref: '#/components/responses/CloneReferencedGcpBigQueryDataTableResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatatables/name/{name}:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a BigQuery data table by name.
      operationId: getBigQueryDataTableReferenceByName
      tags: [ ReferencedGcpResource ]
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDataTableReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new BigQuery dataset reference in a workspace.
      operationId: createBigQueryDatasetReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGcpBigQueryDatasetReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a BigQuery dataset from a workspace.
      operationId: getBigQueryDatasetReference
      tags: [ReferencedGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      deprecated: true
      summary: (DEPRECATED) Update name or description of a BigQuery dataset reference in a workspace.
      operationId: updateBigQueryDatasetReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Update name, description or referencing target of a BigQuery dataset reference in a workspace.
      operationId: updateBigQueryDatasetReferenceResource
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBigQueryDatasetReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete BigQuery dataset reference
      operationId: deleteBigQueryDatasetReference
      tags: [ReferencedGcpResource]
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a BigQuery Dataset
      operationId: cloneGcpBigQueryDatasetReference
      tags: [ReferencedGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGcpBigQueryDatasetResourceResponse'
        '202':
          $ref: '#/components/responses/CloneReferencedGcpBigQueryDatasetResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gcp/bigquerydatasets/name/{name}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a BigQuery dataset by name.
      operationId: getBigQueryDatasetReferenceByName
      tags: [ReferencedGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/GcpBigQueryDatasetReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new Git repository reference in a workspace.
      operationId: createGitRepoReference
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGitRepoReferenceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GitRepoReferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/{resourceId}:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Gets a reference to a Git repository from a workspace.
      operationId: getGitRepoReference
      tags: [ ReferencedGcpResource ]
      responses:
        '200':
          $ref: '#/components/responses/GitRepoReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update name, description or referencing target of a Git repository reference in a workspace.
      operationId: updateGitRepoReference
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGitRepoReferenceRequestBody'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete Git repository reference
      operationId: deleteGitRepoReference
      tags: [ ReferencedGcpResource ]
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/{resourceId}/clone:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a Git repository
      operationId: cloneGitRepoReference
      tags: [ ReferencedGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneReferencedResourceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CloneReferencedGitRepoResourceResponse'
        '202':
          $ref: '#/components/responses/CloneReferencedGitRepoResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/referenced/gitrepos/name/{name}:
    parameters:
    - $ref: '#/components/parameters/WorkspaceId'
    - $ref: '#/components/parameters/Name'
    get:
      summary: Gets a reference to a Git repo referenced resource by name
      operationId: getGitRepoReferenceByName
      tags: [ ReferencedGcpResource ]
      responses:
        '200':
          $ref: '#/components/responses/GitRepoReferenceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/cloudcontexts:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a cloud context for the workspace.
      operationId: createCloudContext
      tags: [Workspace]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCloudContextRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateCloudContextResultResponse'
        '202':
          $ref: '#/components/responses/CreateCloudContextResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/cloudcontexts/result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Get the result of a async job to create a cloud context.
      operationId: getCreateCloudContextResult
      tags: [Workspace]
      responses:
        '200':
          $ref: '#/components/responses/CreateCloudContextResultResponse'
        '202':
          $ref: '#/components/responses/CreateCloudContextResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/cloudcontexts/{cloudContext}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/CloudContext'
    delete:
      summary: Deletes a cloud context and all of its data from a workspace.
      operationId: deleteCloudContext
      tags: [Workspace]
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/roles:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    get:
      summary: Read all IAM roles and their members in a workspace.
      operationId: getRoles
      tags: [Workspace]
      responses:
        '200':
          $ref: '#/components/responses/RoleBindingListResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/roles/{role}/members:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Role'
    post:
      summary: Grant an IAM role to a user or group.
      operationId: grantRole
      tags: [Workspace]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantRoleRequestBody'
      responses:
        '204':
          description: Role granted successfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/roles/{role}/members/{memberEmail}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Role'
      - $ref: '#/components/parameters/MemberEmail'
    delete:
      summary: Remove an IAM role from a user or group.
      operationId: removeRole
      tags: [Workspace]
      responses:
        '204':
          description: Role removed successfully
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'


  /api/job/v1/jobs/{jobId}:
    parameters:
      - $ref: '#/components/parameters/JobId'
    get:
      tags:
        - jobs
      operationId: retrieveJob
      responses:
        200:
          description: Job is complete (succeeded or failed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReport'
        202:
          description: Job is running
          headers:
            Retry-After:
              description: >-
                optional - estimated seconds to wait before polling again. This allows
                a server to offer a hint as to when the job might be complete.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReport'
        400:
          $ref: '#/components/responses/BadRequest'
        403:
          $ref: '#/components/responses/PermissionDenied'
        404:
          $ref: '#/components/responses/NotFound'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Gcp bucket
      operationId: createBucket
      tags: [ControlledGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledGcpGcsBucketRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled GCS bucket resource
      operationId: getBucket
      tags: [ControlledGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled GCS Bucket resource.
      operationId: updateGcsBucket
      tags: [ ControlledGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledGcpGcsBucketRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UpdateControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: |
        Delete a controlled GCS bucket resource. This is async, because deleting the bucket and contents can
        take a very long time. NOTE: this cannot be an HTTP DELETE, because something between generated code
        and server behavior does not support delete operations with bodies. We require the body for the async
        state, so this is a POST.
      operationId: deleteBucket
      tags: [ControlledGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledGcpGcsBucketRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a GCS Bucket
      operationId: cloneGcsBucket
      tags: [ControlledGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneControlledGcpGcsBucketRequest'
      responses:
        '200':
          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'
        '202':
          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/clone-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a gcp bucket clone job.
      operationId: getCloneGcsBucketResult
      tags: [ControlledGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'
        '202':
          $ref: '#/components/responses/ClonedControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/storage:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure Storage Account
      operationId: createAzureStorage
      tags: [ControlledAzureResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureStorageRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureStorageResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/buckets/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a gcp bucket deletion job.
      operationId: getDeleteBucketResult
      tags: [ControlledGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpGcsBucketResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/ip:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure IP
      operationId: createAzureIp
      tags: [ControlledAzureResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureIpRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureIpResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/ip/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure IP resource
      operationId: getAzureIp
      tags: [ControlledAzureResource]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAzureIpResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: |
        Delete an azure IP
      operationId: deleteAzureIp
      tags: [ControlledAzureResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/ip/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an azure ip deletion job.
      operationId: getDeleteAzureIpResult
      tags: [ControlledAzureResource]
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/disks:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure Disk
      operationId: createAzureDisk
      tags: [ ControlledAzureResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureDiskRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureDiskResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/disks/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure Disk resource
      operationId: getAzureDisk
      tags: [ControlledAzureResource]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAzureDiskResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: |
        Delete an azure Disk
      operationId: deleteAzureDisk
      tags: [ControlledAzureResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'


  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/disks/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an azure ip deletion job.
      operationId: getDeleteAzureDiskResult
      tags: [ControlledAzureResource]
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure VM
      operationId: createAzureVm
      tags: [ControlledAzureResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureVmRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureVmResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an Azure Vm create job.
      operationId: getCreateAzureVmResult
      tags: [ ControlledAzureResource ]
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureVmResponse'
        '202':
          $ref: '#/components/responses/CreateControlledAzureVmResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/network:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Azure Network
      operationId: createAzureNetwork
      tags: [ ControlledAzureResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledAzureNetworkRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateControlledAzureNetworkResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure VM resource
      operationId: getAzureVm
      tags: [ ControlledAzureResource ]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAzureVmResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: |
        Delete an azure Vm
      operationId: deleteAzureVm
      tags: [ControlledAzureResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/network/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled Azure Network resource
      operationId: getAzureNetwork
      tags: [ ControlledAzureResource ]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledAzureNetworkResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: |
        Delete an azure Network
      operationId: deleteAzureNetwork
      tags: [ ControlledAzureResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledAzureResourceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/vm/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an azure vm deletion job.
      operationId: getDeleteAzureVmResult
      tags: [ ControlledAzureResource ]
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/azure/network/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about an azure network deletion job.
      operationId: getDeleteAzureNetworkResult
      tags: [ ControlledAzureResource ]
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledAzureResourceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled BigQuery dataset
      operationId: createBigQueryDataset
      tags: [ControlledGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledGcpBigQueryDatasetRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpBigQueryDatasetResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled BigQuery dataset resource
      operationId: getBigQueryDataset
      tags: [ ControlledGcpResource ]
      responses:
        '200':
          $ref: '#/components/responses/ControlledGcpBigQueryDatasetResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    patch:
      summary: Update a controlled BigQuery dataset resource
      operationId: updateBigQueryDataset
      tags: [ ControlledGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlledGcpBigQueryDatasetRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/ControlledGcpBigQueryDatasetResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a controlled Bigquery dataset
      operationId: deleteBigQueryDataset
      tags: [ ControlledGcpResource ]
      responses:
        '204':
          description: Success
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/{resourceId}/clone:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    post:
      summary: Clone a BigQuery dataset
      operationId: cloneBigQueryDataset
      tags: [ControlledGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneControlledGcpBigQueryDatasetRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'
        '202':
          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/bqdatasets/clone-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a gcp BigQuery dataset clone job.
      operationId: getCloneBigQueryDatasetResult
      tags: [ControlledGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'
        '202':
          $ref: '#/components/responses/CloneControlledGcpBigQueryDatasetResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
    post:
      summary: Create a new controlled Gcp AI Platform Notebook Instance
      operationId: createAiNotebookInstance
      tags: [ControlledGcpResource]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlledGcpAiNotebookInstanceRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'
        '202':
          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/create-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a GCP AI Platform Notebook create instance job.
      operationId: getCreateAiNotebookInstanceResult
      tags: [ControlledGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'
        '202':
          $ref: '#/components/responses/CreatedControlledGcpAiNotebookInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/{resourceId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/ResourceId'
    get:
      summary: Get a controlled AI Notebook instance resource
      operationId: getAiNotebookInstance
      tags: [ControlledGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/GetControlledGcpAiNotebookInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: |
        Delete a controlled GCP AI Notebook instance resource. This is async, because deleting the
        notebook instance can take ~5 minutes. NOTE: this cannot be an HTTP DELETE, because
        something between generated code and server behavior does not support delete operations with
        bodies. We require the body for the async state, so this is a POST.
      operationId: deleteAiNotebookInstance
      tags: [ ControlledGcpResource ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteControlledGcpAiNotebookInstanceRequest'
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/workspaces/v1/{workspaceId}/resources/controlled/gcp/ai-notebook-instances/delete-result/{jobId}:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/JobId'
    get:
      summary: Retrieve information about a GCP AI Platform Notebook delete instance job.
      operationId: getDeleteAiNotebookInstanceResult
      tags: [ControlledGcpResource]
      responses:
        '200':
          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'
        '202':
          $ref: '#/components/responses/DeleteControlledGcpAiNotebookInstanceResponse'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  ## ALPHA1 paths
  ## These endpoints are only supported if the alpha1 feature flag is enabled.
  ## They are no compatibility guarantees. The endpoints and related components
  ## may change without notice.

  /api/workspaces/alpha1/{workspaceId}/jobs:
    parameters:
      - $ref: '#/components/parameters/WorkspaceId'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/PageToken'
      - $ref: '#/components/parameters/ResourceType'
      - $ref: '#/components/parameters/StewardshipType'
      - $ref: "#/components/parameters/ResourceName"
      - $ref: '#/components/parameters/JobStateFilter'
    get:
      summary: |
        Enumerate recent jobs run in a workspace. The enumeration includes both running
        and completed jobs. It is ordered by start time of the job.
      operationId: enumerateJobs
      tags: [Alpha1]
      responses:
        '200':
          $ref: '#/components/responses/EnumerateJobsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  parameters:
    ## DEPRECATED PARAMETERS ##
    # TODO(PF-404): remove this in favor of reference-type specific objects.
    ReferenceId:
      name: referenceId
      in: path
      description: (DEPRECATED) A UUID used to identify a data reference in a workspace.
      required: true
      schema:
        type: string
        format: uuid

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    ReferenceType:
      name: referenceType
      in: path
      description: (DEPRECATED) The type of a data reference in a workspace
      required: true
      schema:
        $ref: '#/components/schemas/ReferenceTypeEnum'
    ## END OF DEPRECATED PARAMETERS ##

    ApplicationId:
      name: applicationId
      in: path
      description: A UUID to used to identify an application in the workspace manager
      required: true
      schema:
        type: string
        format: uuid

    WorkspaceId:
      name: workspaceId
      in: path
      description: A UUID to used to identify a workspace in the workspace manager
      required: true
      schema:
        type: string
        format: uuid

    JobId:
      name: jobId
      in: path
      description: A String ID to used to identify a job
      required: true
      schema:
        type: string

    Offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set.
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0

    Limit:
      name: limit
      in: query
      description: The maximum number of items to return. Default 10
      required: false
      schema:
        type: integer
        minimum: 1
        default: 10

    ResourceId:
      name: resourceId
      in: path
      description: A UUID used to identify a controlled resource in a workspace.
      required: true
      schema:
        type: string
        format: uuid

    ResourceType:
      name: resource
      in: query
      description: Filter on a specific resource type
      required: false
      schema:
        $ref: '#/components/schemas/ResourceType'

    StewardshipType:
      name: stewardship
      in: query
      description: Filter on a stewardship type
      required: false
      schema:
        $ref: '#/components/schemas/StewardshipType'

    Name:
      name: name
      in: path
      description: A name used to identify an object in the workspace manager
      required: true
      schema:
        $ref: '#/components/schemas/Name'

    Role:
      name: role
      in: path
      description: An IAM role
      required: true
      schema:
        $ref: '#/components/schemas/IamRole'

    MemberEmail:
      name: memberEmail
      in: path
      description: A user or group's email. Used for adding or removing IAM permissions
      required: true
      schema:
        type: string

    CloudContext:
      name: cloudContext
      in: path
      description: A cloud platform which holds context for a workspace.
      required: true
      schema:
        $ref: '#/components/schemas/CloudPlatform'

    ## ALPHA1 Parameters
    ## They are no compatibility guarantees. The parameters may change without notice.
    PageToken:
      name: pageToken
      in: query
      description: A previously returned page token describing where to resume an enumeration.
      required: false
      schema:
        type: string

    JobStateFilter:
      name: jobState
      in: query
      description: The state of jobs to return (ALL, ACTIVE, COMPLETED)
      required: false
      schema:
        $ref: '#/components/schemas/JobStateFilter'

    ResourceName:
      name: name
      in: query
      description: A name used to identify an object in the workspace manager
      required: false
      schema:
        $ref: '#/components/schemas/Name'

  schemas:
    CloneReferencedResourceRequestBody:
      description: >-
        Cloning options for referenced resources. If optional parameters are omitted,
        the source values will be used.
      type: object
      required: [destinationWorkspaceId]
      properties:
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        destinationWorkspaceId:
          type: string
          format: uuid
        # Null for original name
        name:
          $ref: "#/components/schemas/Name"
        description:
          description: Description for the referenced resource clone, or null to use original.
          type: string

    ### DEPRECATED SCHEMAS ###
    # TODO(PF-404): remove this in favor of reference-type specific objects.
    CreateDataReferenceRequestBody:
      deprecated: true
      type: object
      required: [name, cloningInstructions]
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
          default: ""
        resourceId:
          description: The ID of the resource
          type: string
          format: uuid
        referenceType:
          $ref: '#/components/schemas/ReferenceTypeEnum'
        reference:
          $ref: '#/components/schemas/DataRepoSnapshot'
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    DataReferenceRequestMetadata:
      deprecated: true
      type: object
      required: [name, cloningInstructions]
      description: (DEPRECATED) Common information shared across all types of data reference requests.
      properties:
        ## TODO: This is not implemented as a name. It used as if it is a snapshot identifier (UUID)
        ##   So either this is a misnomer, or we are doing it wrong.
        name:
          $ref: "#/components/schemas/Name"
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        description:
          type: string
          default: ""

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    DataReferenceDescription:
      deprecated: true
      type: object
      required: [referenceId, name, description, workspaceId, cloningInstructions]
      properties:
        referenceId:
          description: The ID of the data reference
          type: string
          format: uuid
        name:
          description: The name of the data reference; used to refer to the reference
          type: string
        description:
          type: string
        workspaceId:
          description: The ID of the workspace containing the reference
          type: string
          format: uuid
        resourceDescription:
          $ref: '#/components/schemas/DeprecatedResourceDescription'
        referenceType:
          $ref: '#/components/schemas/ReferenceTypeEnum'
        reference:
          $ref: '#/components/schemas/DataRepoSnapshot'
        credentialId:
          description: The ID of the credential to use when accessing the resource
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    ReferenceTypeEnum:
      deprecated: true
      type: string
      description: (DEPRECATED) The type of a reference, if an uncontrolled resource
      # TODO: swagger-codegen always looks for and removes a common prefix for
      # enum values, which breaks enums that only have a single value.
      # PLACEHOLDER_VALUE should be removed when we have an actual second value
      # to use.
      enum: ['DATA_REPO_SNAPSHOT', 'PLACEHOLDER_VALUE'] #eventually include GCS bucket, etc.

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    DataReferenceList:
      deprecated: true
      type: object
      required: [resources]
      properties:
        resources:
          description: A list of controlled and/or uncontrolled data references
          type: array
          items:
            $ref: '#/components/schemas/DataReferenceDescription'

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    UpdateDataReferenceRequestBody:
      deprecated: true
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string

    UpdateGcsBucketReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        bucketName:
          description: Name of created bucket (not the resource name).
          type: string

    UpdateGcsBucketObjectReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        bucketName:
          description: Name of created bucket (not the resource name).
          type: string
        objectName:
          description: Full path to the file in the gcs bucket.
          type: string

    UpdateBigQueryDatasetReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        projectId:
          type: string
        datasetId:
          type: string

    UpdateBigQueryDataTableReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        projectId:
          type: string
        datasetId:
          type: string
        dataTableId:
          type: string

    UpdateDataRepoSnapshotReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        instanceName:
          description: The name of the Data Repo instance
          type: string
        snapshot:
          description: The ID of the Data Repo snapshot
          type: string

    UpdateGitRepoReferenceRequestBody:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        gitUrl:
          description: the ssh url of the git repository
          type: string

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    DataReferenceMetadata:
      deprecated: true
      type: object
      required: [referenceId, name, workspaceId, cloningInstructions]
      description: (DEPRECATED) Information common across all types of references.
      properties:
        referenceId:
          description: The ID of the data reference
          type: string
          format: uuid
        name:
          description: The name of the data reference; used to refer to the reference
          type: string
        description:
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        workspaceId:
          description: The ID of the workspace containing the reference
          type: string
          format: uuid

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    DataRepoSnapshotReference:
      deprecated: true
      type: object
      description: (DEPRECATED) A reference to a Data Repo snapshot.
      required: [metadata, snapshot]
      properties:
        metadata:
          $ref: '#/components/schemas/DataReferenceMetadata'
        snapshot:
          $ref: '#/components/schemas/DataRepoSnapshot'

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    DataRepoSnapshot:
      deprecated: true
      description: (DEPRECATED) A reference to a snapshot in Data Repo.
      type: object
      required: [instanceName, snapshot]
      properties:
        instanceName:
          description: The name of the Data Repo instance
          type: string
        snapshot:
          description: The ID of the Data Repo snapshot
          type: string

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    DeprecatedResourceDescription:
      deprecated: true
      description: (DEPRECATED) Description of the workspace resource, if this is a controlled reference.
      type: object
      required: [resourceId, workspaceId, isVisible]
      properties:
        resourceId:
          description: The ID of the resource
          type: string
          format: uuid
        workspaceId:
          description: The ID of the workspace holding the resource
          type: string
          format: uuid
        applicationId:
          description: ID of application this resource is associated with, if any
          type: string
        isVisible:
          description: Whether this resource is visible or not
          type: boolean
        owner:
          description: ID of owner. null for shared resources
          type: string
        attributes:
          description: JSON map of user-provided attributes
          type: string

    ### END OF DEPRECATED SCHEMAS ###

    ErrorReport:
      type: object
      required: [message, statusCode, causes]
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string

    JobReport:
      type: object
      required: [id, status, statusCode, resultURL]
      properties:
        id:
          description: caller-provided unique identifier for the job
          type: string
        description:
          description: caller-provided description of the job
          type: string
        status:
          description: status of the job
          type: string
          enum: [RUNNING, SUCCEEDED, FAILED]
        statusCode:
          description: HTTP code providing status of the job.
          type: integer
        submitted:
          description: timestamp when the job was submitted; in ISO-8601 format
          type: string
        completed:
          description: >-
            timestamp when the job completed - in ISO-8601 format. Present if
            status is SUCCEEDED or FAILED.
          type: string
        resultURL:
          description: >-
            URL where the result of the job can be retrieved. Equivalent to a
            Location header in HTTP.
          type: string

    JobControl:
      type: object
      required: [id]
      properties:
        id:
          description: >-
            Unique identifier for the job. Best practice is for job identifier to be a UUID,
            a ShortUUID, or other globally unique identifier.
          type: string
        # TODO: In the future, notification configuration will also be part of JobControl.

    # ALPHA1:
    JobStateFilter:
      type: string
      enum:
        - ALL
        - ACTIVE
        - COMPLETED

    Name:
      type: string
      pattern: '^[a-zA-Z0-9][-_a-zA-Z0-9]{0,1023}$'

    SystemVersion:
      type: object
      required: [gitTag, gitHash, GitHub, build]
      properties:
        gitTag:
          type: string
          description: Git tag of currently deployed app.
        gitHash:
          type: string
          description: Git hash of currently deployed app.
        github:
          type: string
          description: Github link to currently deployed commit.
        build:
          type: string
          description: Version of the currently deployed app declared in build.gradle. Client and server versions are linked.

    CreateWorkspaceRequestBody:
      type: object
      required: [id]
      properties:
        id:
          description: The ID of the workspace
          type: string
          format: uuid
        displayName:
          description: The human readable name of the workspace
          type: string
        description:
          description: A description of the workspace
          type: string
        spendProfile:
          description: ID of provided spend profile
          type: string
        policies:
          description: Policies provided by the containing folder; NOT IMPLEMENTED
          type: array
          items:
            type: string
            format: uuid
        stage:
          $ref: '#/components/schemas/WorkspaceStageModel'
        properties:
          $ref: '#/components/schemas/Properties'

    Properties:
      description: Optional list of key-value pairs of strings
      type: array
      items:
        $ref: '#/components/schemas/Property'

    Property:
      type: object
      required: [key, value]
      properties:
        key:
          description: |
            String to identify the key. Keys must be 1-1024 characters, using letters,
            numbers, dashes, and underscores and must not start with a dash or underscore.
          type: string
        value:
          description: Arbitrary string value
          type: string

    CreatedWorkspace:
      type: object
      required: [id]
      properties:
        id:
          description: UUID of a newly-created workspace
          type: string
          format: uuid

    ApplicationState:
      description: State of an application
      type: string
      enum:
        - OPERATING
        - DEPRECATED
        - DECOMMISSIONED

    WorkspaceApplicationState:
      description: State of the application in the workspace.
      type: string
      enum:
        - ENABLED
        - DISABLED

    WorkspaceApplicationDescription:
      type: object
      required: [ workspaceId, applicationId ]
      properties:
        workspaceId:
          description: The ID of the workspace
          type: string
          format: uuid
        applicationId:
          description: The ID of the application
          type: string
          format: uuid
        displayName:
          description: The human readable name of the application
          type: string
        description:
          description: A description of the application
          type: string
        applicationState:
          $ref: '#/components/schemas/ApplicationState'
        workspaceApplicationState:
          $ref: '#/components/schemas/WorkspaceApplicationState'

    WorkspaceApplicationDescriptionList:
      type: object
      required: [ workspaces ]
      properties:
        applications:
          description: A list of known applications and their relationship to the workspace
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceApplicationDescription'

    WorkspaceDescription:
      type: object
      required: [id]
      properties:
        id:
          description: The ID of the workspace
          type: string
          format: uuid
        displayName:
          description: The human readable name of the workspace
          type: string
        description:
          description: A description of the workspace
          type: string
        spendProfile:
          description: ID of provided spend profile
          type: string
        stage:
          $ref: '#/components/schemas/WorkspaceStageModel'
        gcpContext:
          description: GCP context, if one exists
          $ref: '#/components/schemas/GcpContext'
        azureContext:
          description: Azure context, if one exists
          $ref: '#/components/schemas/AzureContext'
        properties:
          $ref: '#/components/schemas/Properties'

    UpdateWorkspaceRequestBody:
      type: object
      properties:
        displayName:
          description: The human readable name of the workspace
          type: string
        description:
          description: A description of the workspace
          type: string
        properties:
          description: If present, it will replace all properties with this list
          $ref: '#/components/schemas/Properties'

    WorkspaceDescriptionList:
      type: object
      required: [ workspaces ]
      properties:
        workspaces:
          description: A list of workspaces
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceDescription'

    CreateCloudContextRequest:
      type: object
      required: [cloudPlatform, jobControl]
      description: |
        Request body for asynchronously creating a cloud context for a workspace.
        Contains the CloudPlatform for the context and the JobControl object.
        For GCP, a project is created to contain the cloud resources of the context.
        For Azure, a managed resource group (MRG) is created outside of WSM within a tenant
        and a subscription. The MRG may provide the cloud context for multiple workspaces.
        Therefore, the location of the MRG is provided as input to the context creation.
      properties:
        cloudPlatform:
          $ref: '#/components/schemas/CloudPlatform'
        jobControl:
          $ref: '#/components/schemas/JobControl'
        azureContext:
          $ref: '#/components/schemas/AzureContext'

    AzureContext:
      type: object
      description: The azure cloud context associated with a workspace.
      properties:
        tenantId:
          description: The ID of Azure tenant associated with the workspace.
          type: string
        subscriptionId:
          description: The ID of Azure subscription associated with the workspace.
          type: string
        resourceGroupId:
          description: The ID of Azure resource group associated with the workspace.
          type: string

    GcpContext:
      type: object
      description: The GCP cloud context associated with a workspace.
      required: [projectId]
      properties:
        projectId:
          description: The ID of Gcp Project associated with the workspace.
          type: string

    CreateCloudContextResult:
      type: object
      description: |
        The result of a call to create a cloud context for a workspace. Contains
        a JobReport detailing the async operation and either a GcpContext
        or an ErrorReport detailing an error.
      required: [jobReport]
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        gcpContext:
          $ref: '#/components/schemas/GcpContext'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'

    CreateDataRepoSnapshotReferenceRequestBody:
      type: object
      description: A request to create a reference to a Data Repo snapshot.
      required: [metadata, snapshot]
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        snapshot:
          $ref: '#/components/schemas/DataRepoSnapshotAttributes'

    CreateGcpGcsObjectReferenceRequestBody:
      type: object
      description: A request to create a reference to a GCS object.
      required: [ metadata, file ]
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        file:
          $ref: '#/components/schemas/GcpGcsObjectAttributes'

    CreateGcpGcsBucketReferenceRequestBody:
      type: object
      description: A request to create a reference to a GCS bucket.
      required: [metadata, bucket]
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        bucket:
          $ref: '#/components/schemas/GcpGcsBucketAttributes'

    CreateGcpBigQueryDataTableReferenceRequestBody:
      type: object
      description: A request to create a reference to a BigQuery data table.
      required: [ metadata, dataTable ]
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        dataTable:
          $ref: '#/components/schemas/GcpBigQueryDataTableAttributes'

    CreateGcpBigQueryDatasetReferenceRequestBody:
      type: object
      description: A request to create a reference to a BigQuery dataset.
      required: [metadata, dataset]
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        dataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetAttributes'

    CreateGitRepoReferenceRequestBody:
      type: object
      description: A request to create a reference to a Git repo.
      required: [metadata, gitrepo]
      properties:
        metadata:
          $ref: '#/components/schemas/ReferenceResourceCommonFields'
        gitrepo:
          $ref: '#/components/schemas/GitRepoAttributes'

    WorkspaceStageModel:
      description: Enum for possible stages of a workspace along the Rawls migration path
      type: string
      enum: ['RAWLS_WORKSPACE', 'MC_WORKSPACE']

    IamRole:
      description: Enum containing all valid IAM roles on a Workspace
      type: string
      enum: ['READER', 'WRITER', 'APPLICATION', 'OWNER']

    ControlledResourceIamRole:
      description: Enum containing all IAM roles on controlled resources available to users
      type: string
      enum: [ 'READER', 'WRITER', 'EDITOR']

    RoleBinding:
      description: A binding between an IAM role and users with that role
      type: object
      required: [role]
      properties:
        role:
          $ref: '#/components/schemas/IamRole'
        members:
          description: A list of users that this role applies to
          type: array
          items:
            type: string

    RoleBindingList:
      description: A list of role bindings
      type: array
      items:
        $ref: '#/components/schemas/RoleBinding'

    GrantRoleRequestBody:
      description: The body for a request to grant a role to a single user.
      type: object
      required: [memberEmail]
      properties:
        memberEmail:
          type: string

    CreateControlledAzureIpRequestBody:
      description: Payload for requesting a new controlled Azure IP resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureIp:
          $ref: '#/components/schemas/AzureIpCreationParameters'

    CreateControlledAzureStorageRequestBody:
      description: Payload for requesting a new controlled Azure storage account resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureStorage:
          $ref: '#/components/schemas/AzureStorageCreationParameters'


    CreateControlledAzureDiskRequestBody:
      description: Payload for requesting a new controlled Azure Disk resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureDisk:
          $ref: '#/components/schemas/AzureDiskCreationParameters'

    CreateControlledAzureNetworkRequestBody:
      description: Payload for requesting a new controlled Azure Network resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureNetwork:
          $ref: '#/components/schemas/AzureNetworkCreationParameters'

    CreateControlledAzureVmRequestBody:
      description: Payload for requesting a new controlled Azure VM resource.
      type: object
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        azureVm:
          $ref: '#/components/schemas/AzureVmCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'

    CreateControlledGcpGcsBucketRequestBody:
      description: Payload for requesting a new controlled GCS bucket resource.
      type: object
      required: [common, gcsBucket]
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        gcsBucket:
          $ref: '#/components/schemas/GcpGcsBucketCreationParameters'

    CreateControlledGcpBigQueryDatasetRequestBody:
      description: Payload for requesting a new controlled BigQuery dataset resource.
      type: object
      required: [common, dataset]
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        dataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetCreationParameters'

    CreateControlledGcpAiNotebookInstanceRequestBody:
      description: Payload for requesting a new controlled GCS Api notebook instance.
      type: object
      required: [common, aiNotebookInstance, jobControl]
      properties:
        common:
          $ref: '#/components/schemas/ControlledResourceCommonFields'
        aiNotebookInstance:
          $ref: '#/components/schemas/GcpAiNotebookInstanceCreationParameters'
        jobControl:
          $ref: '#/components/schemas/JobControl'

    ControlledResourceCommonFields:
      type: object
      required: [ name, cloningInstructions, accessScope, managedBy ]
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        accessScope:
          $ref: '#/components/schemas/AccessScope'
        managedBy:
          $ref: '#/components/schemas/ManagedBy'
        privateResourceUser:
          $ref: '#/components/schemas/PrivateResourceUser'

    PrivateResourceUser:
      description: >-
        This text describes the target state:
        Applications may optionally specify a workspace user to have access to the private
        resource by providing this element. If this element is not specified, workspace
        users will have no direct access to the associated cloud resource. If this element
        is specified both fields are required.
      type: object
# TODO: PF-1218 - when CLI and UI are no longer passing this, disallow it for user-private
#  resources, make the role List into a single role, and require both fields to be present.
#      required: [ userName, privateResourceIamRoles ]
      properties:
        userName:
          description: email of the workspace user to grant access
          type: string
        privateResourceIamRoles:
          $ref: '#/components/schemas/PrivateResourceIamRoles'

    PrivateResourceIamRoles:
      description: >-
        List of role(s) granted to the user of a private resource. In the current permission model
        EDITOR includes WRITER includes READER by definition. We only grant the maximum role listed.
      type: array
      items:
        $ref: '#/components/schemas/ControlledResourceIamRole'

    PrivateResourceState:
      description: >-
        The possible states of ownership of a private resource. When a resource is abandoned, the
        assigned user loses permission to access it.
      type: string
      enum:
      - ABANDONED
      - ACTIVE
      - INITIALIZING
      - NOT_APPLICABLE

    ReferenceResourceCommonFields:
      type: object
      required: [name, cloningInstructions]
      description: Common information used in all reference requests
      properties:
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'

    UpdateControlledResourceRequestBody:
      type: object
      description: Common request body for updating a controlled resource
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource description will not be updated if this is omitted.
          type: string
    UpdateControlledGcpGcsBucketRequestBody:
      type: object
      description: Update a GCS bucket's metadata and lifecycle rules.
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource description will not be updated if this is omitted.
          type: string
        updateParameters:
          $ref: '#/components/schemas/GcpGcsBucketUpdateParameters'
    UpdateControlledGcpBigQueryDatasetRequestBody:
      type: object
      description: Update a BigQuery dataset's metadata and expiration times.
      properties:
        name:
          description: Optional. New name to give to this resource. The resource name will not be updated if this is omitted.
          type: string
        description:
          description: Optional. New description to give to this resource. The resource description will not be updated if this is omitted.
          type: string
        updateParameters:
          $ref: '#/components/schemas/GcpBigQueryDatasetUpdateParameters'
    CreatedControlledGcpGcsBucket:
      description: Response Payload for requesting a new controlled GCS bucket.
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource. Null if not created yet.
          type: string
          format: uuid
        gcpBucket:
          $ref: '#/components/schemas/GcpGcsBucketResource'
    CreatedControlledGcpBigQueryDataset:
      description: Response Payload for requesting a new controlled BigQuery dataset.
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource. Null if not created yet.
          type: string
          format: uuid
        bigQueryDataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetResource'

    AzureIpCreationParameters:
      description: >-
        IP-specific properties to be set on creation. These are a subset of the values
        accepted by the azure resource API
      type: object
      required: [name, region]
      properties:
        name:
          description: A valid ip name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
        region:
          description: |
            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.
            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())
          type: string

    AzureStorageCreationParameters:
      description: >-
        Storage-specific properties to be set on creation. These are a subset of the values
        accepted by the azure resource API
      type: object
      required: [ name, region ]
      properties:
        name:
          description: A valid storage account name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
        region:
          description: |
            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.
            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())
          type: string

    AzureDiskCreationParameters:
      description: >-
        Disk-specific properties to be set on creation. These are a subset of the values
        accepted by the azure resource API
      type: object
      required: [ name, region, size ]
      properties:
        name:
          description: A valid disk name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
        region:
          description: |
            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.
            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())
          type: string
        size:
          description: |
            A valid size in GB integer representation
          type: integer

    AzureNetworkCreationParameters:
      description: >-
        Network-specific properties to be set on creation. These are a subset of the values
        accepted by the azure resource API
      type: object
      required: [ name, subnetName, addressSpaceCidr, subnetAddressCidr, region ]
      properties:
        name:
          description: A valid Network name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
        subnetName:
          description: A valid subnet name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
        addressSpaceCidr:
          description: A valid range of IP addresses the network uses
          type: string
        subnetAddressCidr:
          description: A valid range of IP address the subnet uses
          type: string
        region:
          description: |
            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.
            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())
          type: string

    AzureVmCreationParameters:
      description: >-
        Vm-specific properties to be set on creation. These are a subset of the values
        accepted by the azure resource API
      type: object
      required: [name, region, ipId, diskId, networkId, vmSize, vmImageUri]
      properties:
        name:
          description: A valid vm name per https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules
          type: string
        region:
          description: |
            A valid region string representation per https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.management.resourcemanager.fluent.core.region.
            It is best to look at the Region class definition for valid strings (e.g. 'eastus' == Region.US_EAST.toString())
          type: string
        vmSize:
          description: A valid image size as per com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes
          type: string
        vmImageUri:
          description: A valid image Uri. Must be in the same region specified. E.x. /subscriptions/3efc5bdf-be0e-44e7-b1d7-c08931e3c16c/resourceGroups/mrg-qi-1-preview-20210517084351/providers/Microsoft.Compute/galleries/msdsvm/images/customized_ms_dsvm/versions/0.1.0
          type: string
        ipId:
          description: A valid WSM identifier for an Azure Ip that corresponds to a valid azure resource
          type: string
          format: uuid
        diskId:
          description: A valid WSM identifier for an Azure Disk that corresponds to a valid azure resource
          type: string
          format: uuid
        networkId:
          description: A valid WSM identifier for an Azure Network that corresponds to a valid azure resource
          type: string
          format: uuid

    CreatedControlledAzureIp:
      description: Response payload for requesting a new Azure IP
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureIp:
          $ref: '#/components/schemas/AzureIpResource'

    CreatedControlledAzureStorage:
      description: Response payload for requesting a new Azure storage account
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureStorage:
          $ref: '#/components/schemas/AzureStorageResource'

    CreatedControlledAzureDisk:
      description: Response payload for requesting a new Azure disk
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureDisk:
          $ref: '#/components/schemas/AzureDiskResource'

    CreatedControlledAzureNetwork:
      description: Response payload for requesting a new azure network
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureNetwork:
          $ref: '#/components/schemas/AzureNetworkResource'

    CreatedControlledAzureVm:
      description: Api result class for creating A new Azure VM
      type: object
      properties:
        resourceId:
          description: UUID of a newly-created resource.
          type: string
          format: uuid
        azureVm:
          $ref: '#/components/schemas/AzureVmResource'

    GcpGcsBucketCreationParameters:
      description: >-
        Bucket-specific properties to be set on creation. These are a subset of the
        values accepted by the Gcp Storage API.
      type: object
      required: [location]
      properties:
        name:
          description: A valid bucket name per https://cloud.google.com/storage/docs/naming-buckets.
          type: string
        location:
          description: A valid bucket location per https://cloud.google.com/storage/docs/locations.
          type: string
        defaultStorageClass:
          $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'
        lifecycle:
          $ref: '#/components/schemas/GcpGcsBucketLifecycle'

    GcpGcsBucketUpdateParameters:
      description: >-
        Parameters that may be changed by a user. Location and Bucket name are fixed upon create.
      type: object
      properties:
        defaultStorageClass:
          $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'
        lifecycle:
          $ref: '#/components/schemas/GcpGcsBucketLifecycle'

    GcpGcsBucketDefaultStorageClass:
      description: >-
        Type and availability of objects in a bucket, described at https://cloud.google.com/storage/docs/storage-classes.
        This list does not include legacy types that apply to some existing buckets.
      type: string
      enum:
        - STANDARD
        - NEARLINE
        - COLDLINE
        - ARCHIVE
    GcpGcsBucketLifecycle:
      description: >-
        Options to control automatic deletion or storage class change for a bucket.
        Described at https://cloud.google.com/storage/docs/lifecycle.
      type: object
      required: [rules]
      properties:
        rules:
          description: List of rules for this bucket
          type: array
          items:
            $ref: '#/components/schemas/GcpGcsBucketLifecycleRule'

    GcpGcsBucketLifecycleRule:
      description: A lifecycle rule for a bucket.
      type: object
      required: [action]
      properties:
        action:
          $ref: '#/components/schemas/GcpGcsBucketLifecycleRuleAction'
        condition:
          $ref: '#/components/schemas/GcpGcsBucketLifecycleRuleCondition'

    GcpGcsBucketLifecycleRuleAction:
      description: The lifecycle action to take. See https://cloud.google.com/storage/docs/lifecycle#actions.
      type: object
      required: [type]
      properties:
        storageClass:
          $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'
        type:
          $ref: '#/components/schemas/GcpGcsBucketLifecycleRuleActionType'

    GcpGcsBucketLifecycleRuleActionType:
      description: >-
        Type of action to perform. Formatted like our Java enums, but spelled in Camel case in Gcp API.
      type: string
      enum:
        - DELETE
        - SET_STORAGE_CLASS

    GcpGcsBucketLifecycleRuleCondition:
      description: The condition(s) under which the action will be taken.
      type: object
      properties:
        age:
          description: Age of an object (in days). This condition is satisfied when an object reaches the specified age.
          type: integer
        createdBefore:
          description: This condition is satisfied when an object is created before midnight of the specified date in UTC.
          type: string
          format: date-time
        customTimeBefore:
          description: >-
            This condition is satisfied when the customTime metadata for the object is set to an
            earlier date than the date used in this lifecycle condition.
          type: string
          format: date-time
        daysSinceCustomTime:
          description: >-
            Days since the date set in the customTime metadata for the object. This condition is
            satisfied when the current date and time is at least the specified number of days after
            the customTime.
          type: integer
        daysSinceNoncurrentTime:
          description: >-
            Relevant only for versioned objects. This condition is satisfied when an object has
            been noncurrent for more than the specified number of days.
          type: integer
        live:
          description: >-
            Relevant only for versioned objects. If the value is true, this condition matches the
            live version of objects; if the value is false, it matches noncurrent versions of objects.
          type: boolean
        matchesStorageClass:
          description: >-
            Objects having any of the storage classes specified by this condition will be matched.
            Values include "STANDARD", "NEARLINE", "COLDLINE", "ARCHIVE", "MULTI_REGIONAL",
            "REGIONAL", and "DURABLE_REDUCED_AVAILABILITY".
          type: array
          items:
            $ref: '#/components/schemas/GcpGcsBucketDefaultStorageClass'
        noncurrentTimeBefore:
          description: >-
            Relevant only for versioned objects. This condition is satisfied for objects that became
            noncurrent on a date prior to the one specified in this condition.
          type: string
          format: date-time
        numNewerVersions:
          description: >-
            Relevant only for versioned objects. If the value is N, this condition is satisfied
            when there are at least N versions (including the live version) newer than this version
            of the object.
          type: integer

    CloneControlledGcpGcsBucketRequest:
      description: >-
        Values to assign to the cloned bucket for a given source bucket. Leave
        name and description null to take the source object's values.
      type: object
      required: [destinationWorkspaceId, jobControl]
      properties:
        destinationWorkspaceId:
          description: ID of workspace to be cloned into
          type: string
          format: uuid
        cloningInstructions:
          $ref: "#/components/schemas/CloningInstructionsEnum"
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        bucketName:
          description: >-
            Name of created bucket (not the resource name). This name must
            be globally unique, so it can't be a copy of the original bucket name.
            It also can't be a simple formula like copy-of-bucket-name, as that would
            fail on subsequent clone operations with bucket-name as the source bucket.
            If null, a random bucket name will be created.
          type: string
        location:
          description: >-
            A valid bucket location per https://cloud.google.com/storage/docs/locations.
            If null, will use source bucket's location.
          type: string
        jobControl:
          $ref: '#/components/schemas/JobControl'
    ClonedControlledGcpGcsBucket:
      description: >-
        Response object for clone of a GCS Bucket. Destination workspace and
        resource IDs are available in the bucket's metadata object. TODO: generalize so there's a
        single response type for all resource clones?
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        bucket:
          $ref: "#/components/schemas/CreatedControlledGcpGcsBucket"
    CloneControlledGcpGcsBucketResult:
      description: >-
        API result class for cloning a GCS bucket.
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/ClonedControlledGcpGcsBucket'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    CloneReferencedGcpGcsBucketResourceResult:
      description: >-
        API result class for cloning a referenced GCS Bucket resource. Includes source workspace
        and resource IDs for provenance. If the effective cloning instructions are not
        COPY_REFERENCE, then no clone is created and the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GcpGcsBucketResource'
    CloneReferencedGcpGcsObjectResourceResult:
      description: >-
        API result class for cloning a referenced GCS object resource. Includes source workspace
        and resource IDs for provenance. If the effective cloning instructions are not
        COPY_REFERENCE, then no clone is created and the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GcpGcsObjectResource'
    CloneReferencedGcpBigQueryDatasetResourceResult:
      description: >-
        API result class for cloning a referenced BigQuery dataset resource. Includes source workspace
        and resource IDs for provenance. If the effective cloning instructions are not
        COPY_REFERENCE, then no clone is created and the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GcpBigQueryDatasetResource'
    CloneReferencedGcpBigQueryDataTableResourceResult:
      description: >-
        API result class for cloning a referenced BigQuery data table resource. Includes source workspace
        and resource IDs for provenance. If the effective cloning instructions are not
        COPY_REFERENCE, then no clone is created and the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GcpBigQueryDataTableResource'
    CloneReferencedGcpDataRepoSnapshotResourceResult:
      description: >-
        API result class for cloning a referenced Data Repo snapshot resource. Includes source workspace
        and resource IDs for provenance. If the effective cloning instructions are not
        COPY_REFERENCE, then no clone is created and the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/DataRepoSnapshotResource'
    CloneReferencedGitRepoResourceResult:
      description: >-
        API result class for cloning a referenced Git repo resource. Includes source workspace
        and resource IDs for provenance. If the effective cloning instructions are not
        COPY_REFERENCE, then no clone is created and the resource is null.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        resource:
          $ref: '#/components/schemas/GitRepoResource'
    GcpBigQueryDatasetCreationParameters:
      description: >-
        Dataset-specific properties to be set on creation. These are a subset of the
        values accepted by the BigQuery API.
      type: object
      required: [location]
      properties:
        datasetId:
          description: A valid dataset name per https://cloud.google.com/bigquery/docs/datasets#dataset-naming
          type: string
        location:
          description: A valid dataset location per https://cloud.google.com/bigquery/docs/locations.
          type: string
        defaultTableLifetime:
          description: Optional. Default lifetime (in seconds) for newly created tables.
          type: integer
        defaultPartitionLifetime:
          description: Optional. Default lifetime (in seconds) for partitions in newly created partitioned tables.
          type: integer
    GcpBigQueryDatasetUpdateParameters:
      description: >-
        Parameters that may be changed by a user. Location and dataset id are fixed upon create.
      properties:
        defaultTableLifetime:
          description:  >-
            Optional. Default lifetime (in seconds) for newly created tables.
            Specify zero (0) to unset an existing value.
            The default table lifetime will not be updated if this is omitted.
          type: integer
        defaultPartitionLifetime:
          description:  >-
            Optional. Default lifetime (in seconds) for partitions in newly created partitioned tables.
            Specify zero (0) to unset an existing value.
            The default partition lifetime will not be updated if this is omitted.
          type: integer

    CloneControlledGcpBigQueryDatasetRequest:
      description: >-
        Values to assign to the cloned dataset for a given source dataset. Leave
        name and description null to take the source object's values.
      type: object
      required: [destinationWorkspaceId, jobControl]
      properties:
        destinationWorkspaceId:
          description: ID of workspace to be cloned into
          type: string
          format: uuid
        destinationDatasetName:
          description: Name for destination dataset. Letters, numbers and underscores only.
          type: string
        cloningInstructions:
          $ref: "#/components/schemas/CloningInstructionsEnum"
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        location:
          description: >-
            A valid dataset location per https://cloud.google.com/bigquery/docs/locations.
            If null, will use source dataset's location.
          type: string
        jobControl:
          $ref: '#/components/schemas/JobControl'
    CloneControlledGcpBigQueryDatasetResult:
      description: Result of successful BigQuery dataset clone
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/ClonedControlledGcpBigQueryDataset'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
    ClonedControlledGcpBigQueryDataset:
      description: >-
        Response object for clone of a BigQuery dataset. Destination workspace and
        resource IDs are available in the bucket's metadata object.
      type: object
      properties:
        effectiveCloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        sourceWorkspaceId:
          description: ID of the workspace of the source resource for this clone
          type: string
          format: uuid
        sourceResourceId:
          description: ID of the source resource
          type: string
          format: uuid
        dataset:
          $ref: "#/components/schemas/GcpBigQueryDatasetResource"
    CloneWorkspaceRequest:
      description: >-
        Request body for cloning an entire workspace. The stage is always MC. Cloning instructions
        are taken from individual resources.
      type: object
      required:
        - spendProfile
      properties:
        displayName:
          description: The human readable name of the workspace
          type: string
        description:
          description: A description of the cloned workspace
          type: string
        spendProfile:
          description: ID of provided spend profile
          type: string
        location:
          description: >-
            GCP Location to use for cloud-based resources. If omitted, the location of the source
            resource will be used.
          type: string
        properties:
          $ref: '#/components/schemas/Properties'

    CloneWorkspaceResult:
      description: >-
        Response for workspace clone, including details on each controlled or referenced resource
        either cloned or attempted to be cloned.
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        workspace:
          $ref: '#/components/schemas/ClonedWorkspace'
    ClonedWorkspace:
      description: >-
        Flight result class for workspace clone. Indicates status for each resource
        cloned (or skipped).
      type: object
      properties:
        sourceWorkspaceId:
          type: string
          format: uuid
        destinationWorkspaceId:
          type: string
          format: uuid
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCloneDetails'
    ResourceCloneDetails:
      description: >-
        A structure to give provenance of a controlled or referenced resource clone
      type: object
      properties:
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        stewardshipType:
          $ref: '#/components/schemas/StewardshipType'
        sourceResourceId:
          description: resource ID of the original resource
          type: string
          format: uuid
        destinationResourceId:
          description: resource ID of the cloned resource, or null if failed or skipped
          type: string
          format: uuid
        result:
          $ref: '#/components/schemas/CloneResourceResult'
        errorMessage:
          description: If result is FAILED, a short description of the cause, if available.
          type: string
        name:
          description: name of the resource (same as source)
          type: string
        description:
          description:  description of the destination resource (same as source)
          type: string
    CloneResourceResult:
      type: string
      enum:
        - SUCCEEDED
        - FAILED
        - SKIPPED
    DeleteControlledGcpGcsBucketRequest:
      type: object
      required: [ jobControl ]
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'

    DeleteControlledAzureResourceRequest:
      type: object
      required: [ jobControl ]
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'

    DeleteControlledAzureResourceResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'

    DeleteControlledGcpGcsBucketResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'

    CreatedControlledGcpAiNotebookInstanceResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        aiNotebookInstance:
          $ref: '#/components/schemas/GcpAiNotebookInstanceResource'

    CreatedControlledAzureVmResult:
      description: Api result class for creating an azure vm
      type: object
      properties:
        azureVm:
          $ref: '#/components/schemas/CreatedControlledAzureVm'
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'

    GcpAiNotebookInstanceCreationParameters:
      description: >-
        AI Platform Notebook instance specific properties to be set on creation. These are a subset of the
        values accepted by the GCP AI Platforms API. See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances/create
      type: object
      required: [location, machineType]
      properties:
        instanceId:
          description: >-
            An instanceId unique to this project and location. Must be 1-63 characters, using lower
            case letters, numbers, and dashes. The first character must be a lower case letter,
            and the last character must not be a dash.
          type: string
        location:
          description: The canonical GCP id for this location. For example, \'us-east1\'.
          type: string
        postStartupScript:
          description: >-
            Path to a Bash script that automatically runs after a notebook instance fully boots up.
            The path must be a URL or Cloud Storage path (gs://path-to-file/file-name). If the path
            is a cloud storage path, the created VM instance's service account's credentials is used
            to access it.
          type: string
        machineType:
          description: The Compute Engine machine type of this instance, see
            https://cloud.google.com/compute/docs/machine-types
          type: string
        acceleratorConfig:
          $ref: '#/components/schemas/GcpAiNotebookInstanceAcceleratorConfig'
        installGpuDriver:
          description: >-
            Whether the end user authorizes Google Cloud to install GPU driver on this instance. If
            this field is empty or set to false, the GPU driver won't be installed. Only applicable
            to instances with GPUs.
          type: boolean
        customGpuDriverPath:
          description: >-
            Specify a custom Cloud Storage path where the GPU driver is stored. If not specified,
            we'll automatically choose from official GPU drivers.
          type: string
        bootDiskType:
          description: >-
            The type of the boot disk attached to this instance, defaults to standard persistent
            disk (PD_STANDARD). See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances#DiskType
          type: string
        bootDiskSizeGb:
          description: >-
            Input only. The size of the boot disk in GB attached to this instance, up to a maximum
            of 64000 GB (64 TB). The minimum recommended value is 100 GB. If not specified, this
            defaults to 100.
          type: integer
          format: int64
        dataDiskType:
          description: >-
            Input only. The type of the data disk attached to this instance, defaults to standard
            persistent disk (PD_STANDARD). See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances#DiskType
          type: string
        dataDiskSizeGb:
          description: >-
            Input only. The size of the data disk in GB attached to this instance, up to a maximum
            of 64000 GB (64 TB). If not specified, this defaults to 100.
          type: integer
          format: int64
        metadata:
          description: >-
            Custom metadata to apply to this instance. Some metadata keys are reserved by Terra and
            will throw a bad request error if specified: 'proxy-mode'.
          type: object
          additionalProperties:
            type: string
        vmImage:
          $ref: '#/components/schemas/GcpAiNotebookInstanceVmImage'
        containerImage:
          $ref: '#/components/schemas/GcpAiNotebookInstanceContainerImage'

    GcpAiNotebookInstanceAcceleratorConfig:
      description: >-
        The hardware accelerator used on this instance. If you use accelerators, make sure that your
        configuration has enough vCPUs and memory to support the machineType you have selected.
        See https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/projects.locations.instances#AcceleratorConfig
      type: object
      required: [type, coreCount]
      properties:
        type:
          description: Type of this accelerator
          type: string
        coreCount:
          description: Count of cores of this accelerator.
          type: integer
          format: int64

    GcpAiNotebookInstanceVmImage:
      description: >-
        Either this or containerImage must be specified. Definition of a custom Compute Engine
        virtual machine image for starting a notebook instance with the environment installed
        directly on the VM. See
        https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/VmImage
      type: object
      required: [projectId]
      properties:
        projectId:
          description: >-
            The name of the Google Cloud project that this VM image belongs to. Format:
            'projects/{project_id}'
          type: string
        imageName:
          description: >-
            Either this or imageFamily must be specified. Use VM image name to find the image.
          type: string
        imageFamily:
          description: >-
            Either this or imageName must be specified. Use this VM image family to find the image;
            the newest image in this family will be used.
          type: string

    GcpAiNotebookInstanceContainerImage:
      description: >-
        Either this or vmImage must be specified. Definition of a container image for starting a
        notebook instance with the environment installed in a container. See
        https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1/ContainerImage
      type: object
      required: [repository]
      properties:
        repository:
          description: >-
            Required. The path to the container image repository. For example:
            'gcr.io/{project_id}/{imageName}'
          type: string
        tag:
          description: >-
            The tag of the container image. If not specified, this defaults to the latest tag.
          type: string

    DeleteControlledGcpAiNotebookInstanceRequest:
      type: object
      required: [ jobControl ]
      properties:
        jobControl:
          $ref: '#/components/schemas/JobControl'

    DeleteControlledGcpAiNotebookInstanceResult:
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'

    ## Cloud Resource, Attribute, and Enumeration structures ##
    ## Resources and attributes are in alphabetical order
    ## followed by enumerations in alphabetical order.

    ControlledResourceMetadata:
      type: object
      properties:
        accessScope:
          $ref: '#/components/schemas/AccessScope'
        managedBy:
          $ref: '#/components/schemas/ManagedBy'
        privateResourceUser:
          $ref: '#/components/schemas/PrivateResourceUser'
        privateResourceState:
          $ref: '#/components/schemas/PrivateResourceState'

    DataRepoSnapshotAttributes:
      description: Attributes of a data repository snapshot
      type: object
      required: [instanceName, snapshot]
      properties:
        instanceName:
          description: The name of the Data Repo instance
          type: string
        snapshot:
          description: The ID of the Data Repo snapshot
          type: string

    DataRepoSnapshotResource:
      deprecated: true
      type: object
      description: A Data Repo snapshot resource
      required: [metadata, snapshot]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/DataRepoSnapshotAttributes'

    GcpBigQueryDataTableAttributes:
      description: Attributes of a BigQuery data table
      type: object
      required: [ projectId, datasetId, dataTableId ]
      properties:
        projectId:
          type: string
        datasetId:
          type: string
        dataTableId:
          type: string

    GcpBigQueryDataTableResource:
      type: object
      description: A reference to a BigQuery data table.
      required: [ metadata, dataTable ]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpBigQueryDataTableAttributes'

    GcpBigQueryDatasetAttributes:
      description: Attributes of a BigQuery dataset
      type: object
      required: [projectId, datasetId]
      properties:
        projectId:
          type: string
        datasetId:
          type: string

    GcpBigQueryDatasetResource:
      type: object
      description: A reference to a BigQuery dataset.
      required: [metadata, attributes]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpBigQueryDatasetAttributes'

    GcpGcsObjectAttributes:
      description: >-
        GCS object properties included in post-creation, get, and update. Others must be
        retrieved from GCS using the name.
      type: object
      required: [ bucketName, fileName ]
      properties:
        bucketName:
          description: Name of created bucket (not the resource name).
          type: string
        fileName:
          description: Full path to the file in the gcs bucket.
          type: string

    GcpGcsObjectResource:
      type: object
      description: Description of a GCS object.
      required: [ metadata, attributes ]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpGcsObjectAttributes'

    GitRepoAttributes:
      description: Attributes of a Git repository
      type: object
      required: [ gitUrl ]
      properties:
        gitUrl:
          type: string

    GitRepoResource:
      type: object
      description: A git repository resource
      required: [ metadata, attributes ]
      properties:
        metadata:
          description:  the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GitRepoAttributes'

    AzureIpAttributes:
      description: >-
        IP properties included in post-creation get. Others must be retrieved from Azure using the name.
      type: object
      properties:
        ipName:
          description: Name of created ip (not the resource name).
          type: string
        region:
          description: Azure region of created ip
          type: string

    AzureStorageAttributes:
      description: >-
        Storage properties included in post-creation get.
      type: object
      properties:
        storageAccountName:
          description: Name of the storage account.
          type: string
        region:
          description: Azure region of created storage account.
          type: string

    AzureDiskAttributes:
      description: >-
        Disk properties included in post-creation get and update. Others must be retrieved from Azure using the name.
      type: object
      properties:
        diskName:
          description: Name of created disk (not the resource name).
          type: string
        region:
          description: Azure region of created disk
          type: string

    AzureNetworkAttributes:
      description: >-
        Network properties included in post-creation get and update. Others must be retrieved from Azure using the name.
      type: object
      properties:
        networkName:
          description: Name of created network (not the resource name).
          type: string
        subnetName:
          description: Name of created subnetwork (not the resource name).
          type: string
        addressSpaceCidr:
          description: Name of created addressSpaceCidr (not the resource name).
          type: string
        subnetAddressCidr:
          description: Name of created subnetAddressCidr (not the resource name).
          type: string
        region:
          description: Azure region of created Network
          type: string

    AzureVmAttributes:
      description: >-
        Vm properties included in post-creation get and update. Others must be retrieved from Azure using the name.
      type: object
      properties:
        vmName:
          description: Name of created vm (not the resource name).
          type: string
        region:
          description: Azure region of created vm
          type: string
        vmSize:
          description: A valid image size as per com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes
          type: string
        vmImageUri:
          description: A valid image Uri. Must be in the same region specified. E.x. /subscriptions/3efc5bdf-be0e-44e7-b1d7-c08931e3c16c/resourceGroups/mrg-qi-1-preview-20210517084351/providers/Microsoft.Compute/galleries/msdsvm/images/customized_ms_dsvm/versions/0.0.4
          type: string
        ipId:
          description: A valid WSM identifier for an Azure Ip that corresponds to a valid azure resource
          type: string
          format: uuid
        diskId:
          description: A valid WSM identifier for an Azure Disk that corresponds to a valid azure resource
          type: string
          format: uuid
        networkId:
          description: A valid WSM identifier for an Azure Network that corresponds to a valid azure resource
          type: string
          format: uuid

    GcpGcsBucketAttributes:
      description: >-
        Bucket properties included in post-creation, get, and update. Others must be
        retrieved from GCS using the name.
      type: object
      required: [bucketName]
      properties:
        bucketName:
          description: Name of created bucket (not the resource name).
          type: string

    GcpGcsBucketResource:
      type: object
      description: Description of a GCS bucket.
      required: [metadata, attributes]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpGcsBucketAttributes'

    AzureIpResource:
      type: object
      description: Description of an Azure Ip
      required: [metadata, attributes]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureIpAttributes'

    AzureStorageResource:
      type: object
      description: Description of an Azure storage account.
      required: [ metadata, attributes ]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureStorageAttributes'

    AzureDiskResource:
      type: object
      description: Description of an Azure disk
      required: [metadata, attributes]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureDiskAttributes'

    AzureNetworkResource:
      type: object
      description: Description of an Azure Network
      required: [ metadata, attributes ]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureNetworkAttributes'

    AzureVmResource:
      type: object
      description: Description of an Azure vm
      required: [metadata, attributes]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/AzureVmAttributes'

    GcpAiNotebookInstanceAttributes:
      description: >-
        AI Notebook instance properties included in post-creation, get, and update. Others must be
        retrieved from GCP using the specification.
      type: object
      required: [projectId, location, instanceId]
      properties:
        projectId:
          description: The GCP project id for the project containing the notebook instance.
          type: string
        location:
          description: The GCP location containing the notebook instance, e.g. 'us-east1-b'
          type: string
        instanceId:
          description: An instance id unique to this project and location.
          type: string

    GcpAiNotebookInstanceResource:
      type: object
      description: Description of a AI Notebook Instance resource.
      required: [metadata, attributes]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        attributes:
          $ref: '#/components/schemas/GcpAiNotebookInstanceAttributes'

    ResourceAttributesUnion:
      type: object
      description: |
        This object contains a reference to an object for each resource type.
        Exactly one will be populated based on the ResourceType in the
        ResourceDescription. The value of the other references is undefined.
      properties:
        gcpBqDataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetAttributes'
        gcpBqDataTable:
          $ref: '#/components/schemas/GcpBigQueryDataTableAttributes'
        gcpDataRepoSnapshot:
          $ref: '#/components/schemas/DataRepoSnapshotAttributes'
        gcpGcsBucket:
          $ref: '#/components/schemas/GcpGcsBucketAttributes'
        gcpGcsObject:
          $ref: '#/components/schemas/GcpGcsObjectAttributes'
        gcpAiNotebookInstance:
          $ref: '#/components/schemas/GcpAiNotebookInstanceAttributes'
        azureDisk:
          $ref: '#/components/schemas/AzureDiskAttributes'
        azureIp:
          $ref: '#/components/schemas/AzureIpAttributes'
        azureNetwork:
          $ref: '#/components/schemas/AzureNetworkAttributes'
        azureStorage:
          $ref: '#/components/schemas/AzureStorageAttributes'
        azureVm:
          $ref: '#/components/schemas/AzureVmAttributes'
        gitRepo:
          $ref: '#/components/schemas/GitRepoAttributes'

    ResourceDescription:
      type: object
      required: [metadata, resourceAttributes]
      properties:
        metadata:
          description: the resource metadata common to all resources
          $ref: '#/components/schemas/ResourceMetadata'
        resourceAttributes:
          description: Data specific to the type of resource and whether it is controlled or not
          $ref: '#/components/schemas/ResourceAttributesUnion'

    ResourceList:
      type: object
      required: [resources]
      properties:
        resources:
          description: Enumerated list of controlled and referenced resources
          type: array
          items:
            $ref: '#/components/schemas/ResourceDescription'

    ResourceMetadata:
      type: object
      properties:
        workspaceId:
          type: string
          format: uuid
        resourceId:
          type: string
          format: uuid
        name:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        stewardshipType:
          $ref: '#/components/schemas/StewardshipType'
        cloudPlatform:
          $ref: '#/components/schemas/CloudPlatform'
        cloningInstructions:
          $ref: '#/components/schemas/CloningInstructionsEnum'
        controlledResourceMetadata:
          description: Present if stewardship type is CONTROLLED
          $ref: '#/components/schemas/ControlledResourceMetadata'

    PetServiceAccount:
      description: The email identifier of a pet service account
      type: string

    # Enumerations (related to resources) in alphabetical order.
    AccessScope:
      type: string
      description: Specifies the resource as shared or private
      enum: ['SHARED_ACCESS', 'PRIVATE_ACCESS']

    CloudPlatform:
      type: string
      description: Enum representing a cloud platform type.
      enum: ['AZURE', 'GCP']

    CloningInstructionsEnum:
      type: string
      description: Instructions for copying this reference when cloning the workspace
      enum: ['COPY_NOTHING', 'COPY_DEFINITION', 'COPY_RESOURCE', 'COPY_REFERENCE']

    ManagedBy:
      type: string
      description: Specifies the controller of the resource, workspace users or an application
      enum: [ 'USER', 'APPLICATION' ]

    # The resource types are common to both stewardship types
    ResourceType:
      description: Enum containing valid resource types. Used for enumeration
      type: string
      enum:
        - AI_NOTEBOOK
        - BIG_QUERY_DATASET
        - BIG_QUERY_DATA_TABLE
        - DATA_REPO_SNAPSHOT
        - GCS_BUCKET
        - GCS_OBJECT
        - AZURE_IP
        - AZURE_DISK
        - AZURE_NETWORK
        - AZURE_VM
        - AZURE_STORAGE_ACCOUNT
        - Git_REPO

    StewardshipType:
      description: Enum containing valid stewardship types. Used for enumeration
      type: string
      enum: ['REFERENCED', 'CONTROLLED']

    ## ALPHA1 schemas
    ## These schemas are only by alpha1 paths
    ResourceUnion:
      type: object
      description: |
        This object contains a reference to an object for each resource type.
        Exactly one will be populated based on its ResourceType.
      properties:
        gcpBqDataset:
          $ref: '#/components/schemas/GcpBigQueryDatasetResource'
        gcpBqDataTable:
          $ref: '#/components/schemas/GcpBigQueryDataTableResource'
        gcpDataRepoSnapshot:
          $ref: '#/components/schemas/DataRepoSnapshotResource'
        gcpGcsBucket:
          $ref: '#/components/schemas/GcpGcsBucketResource'
        gcpGcsObject:
          $ref: '#/components/schemas/GcpGcsObjectResource'
        gcpAiNotebookInstance:
          $ref: '#/components/schemas/GcpAiNotebookInstanceResource'
        azureIp:
          $ref: '#/components/schemas/AzureIpResource'
        azureDisk:
          $ref: '#/components/schemas/AzureDiskResource'
        azureNetwork:
          $ref: '#/components/schemas/AzureDiskResource'
        azureVm:
          $ref: '#/components/schemas/AzureVmResource'
        azureStorageAccount:
          $ref: '#/components/schemas/AzureStorageResource'

    OperationType:
      type: string
      description: Types of job operations
      enum: [ 'CLONE', 'CREATE', 'DELETE', 'UPDATE', 'UNKNOWN' ]

    EnumeratedJob:
      description: |
        One job returned by the enumerate jobs request. The jobReport is always present.
        If the job failed, the error report is present. Depending on the operation, the
        resource information
      type: object
      properties:
        jobReport:
          $ref: '#/components/schemas/JobReport'
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
        jobDescription:
          type: string
        operationType:
          $ref: '#/components/schemas/OperationType'
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        resource:
          $ref: '#/components/schemas/ResourceUnion'

    EnumerateJobsResult:
      description: result of an enumerateJobs request
      type: object
      properties:
        totalResults:
          type: integer
        pageToken:
          type: string
        results:
          description: List of enumerated jobs
          type: array
          items:
            $ref: '#/components/schemas/EnumeratedJob'

  responses:
    ### DEPRECATED RESPONSES ###
    # TODO(PF-404): remove this in favor of reference-type specific objects.
    DataReferenceResponse:
      description: Response to getDataReference calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataReferenceDescription'

    # TODO(PF-404): remove this in favor of reference-type specific objects.
    ReferenceListResponse:
      description: Response to list resource calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataReferenceList'
    ### END OF DEPRECATED RESPONSES ###

    EnablePetSaResponse:
      description: Response to enablePet calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PetServiceAccount'

    CreatedWorkspaceResponse:
      description: Response to createWorkspace calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedWorkspace'

    DataRepoSnapshotReferenceResponse:
      description: Response containing a reference to a Data Repo snapshot.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataRepoSnapshotResource'

    GcpGcsObjectReferenceResponse:
      description: Response containing a reference to a Gcp GCS object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpGcsObjectResource'

    GcpGcsBucketReferenceResponse:
      description: Response containing a reference to a Gcp bucket.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpGcsBucketResource'

    GcpBigQueryDataTableReferenceResponse:
      description: Response containing a reference to a BiqQuery data table.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpBigQueryDataTableResource'

    GcpBigQueryDatasetReferenceResponse:
      description: Response containing a reference to a BiqQuery dataset.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpBigQueryDatasetResource'

    GitRepoReferenceResponse:
      description: Response containing a reference to a git repository.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitRepoResource'

    RoleBindingListResponse:
      description: Response to list permissions calls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleBindingList'

    CreateControlledAzureStorageResponse:
      description: Response to create controlled azure storage
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAzureStorage'

    CreateControlledAzureIpResponse:
      description: Response to create controlled azure ip
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAzureIp'

    CreateControlledAzureDiskResponse:
      description: Response to create controlled Azure disk
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAzureDisk'

    CreateControlledAzureNetworkResponse:
      description: Response to create controlled azure network
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAzureNetwork'

    CreateControlledAzureVmResponse:
      description: Response to create controlled Azure Vm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledAzureVmResult'

    DeleteControlledAzureResourceResponse:
      description: Response Payload for deleting an azure ip
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteControlledAzureResourceResult'

    GetControlledAzureIpResponse:
      description: Response to get ip
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AzureIpResource'

    GetControlledAzureNetworkResponse:
      description: Response to get network
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AzureNetworkResource'

    GetControlledAzureDiskResponse:
      description: Response to get disk
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AzureDiskResource'

    GetControlledAzureVmResponse:
      description: Response to get vm
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AzureVmResource'

    CreatedControlledGcpGcsBucketResponse:
      description: Response to Create controlled Gcs bucket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledGcpGcsBucket'

    ClonedControlledGcpGcsBucketResponse:
      description: Response to GCS bucket clone operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneControlledGcpGcsBucketResult'

    DeleteControlledGcpGcsBucketResponse:
      description: Response Payload for deleting a Gcs bucket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteControlledGcpGcsBucketResult'

    GetControlledGcpGcsBucketResponse:
      description: Response to get bucket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpGcsBucketResource'
    UpdateControlledGcpGcsBucketResponse:
      description: Reponse to GCP GCS Bucket update.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpGcsBucketResource' # TODO:  add other attributes
    CreatedControlledGcpBigQueryDatasetResponse:
      description: Response to Create controlled BigQuery dataset
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledGcpBigQueryDataset'

    ControlledGcpBigQueryDatasetResponse:
      description: Response containing a controlled BigQuery dataset
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpBigQueryDatasetResource'

    CreatedControlledGcpAiNotebookInstanceResponse:
      description: Response to Create controlled resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedControlledGcpAiNotebookInstanceResult'

    DeleteControlledGcpAiNotebookInstanceResponse:
      description: Response Payload for deleting a Gcs bucket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteControlledGcpAiNotebookInstanceResult'

    GetControlledGcpAiNotebookInstanceResponse:
      description: Response to get AI Notebook instance.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GcpAiNotebookInstanceResource'

    CreateCloudContextResultResponse:
      description: Job is complete (succeeded or failed)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCloudContextResult'
    CloneReferencedGcpGcsObjectResourceResponse:
      description: Response for successful GCS object reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGcpGcsObjectResourceResult'
    CloneReferencedGcpGcsBucketResourceResponse:
      description: Response for successful GCS Bucket reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGcpGcsBucketResourceResult'
    CloneReferencedGcpBigQueryDatasetResourceResponse:
      description: Response for successful BigQuery dataset reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGcpBigQueryDatasetResourceResult'
    CloneReferencedGcpBigQueryDataTableResourceResponse:
      description: Response for successful BigQuery data table reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGcpBigQueryDataTableResourceResult'
    CloneReferencedGcpDataRepoSnapshotResourceResponse:
      description: Response for successful Data Repo Snapshot reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGcpDataRepoSnapshotResourceResult'
    CloneReferencedGitRepoResourceResponse:
      description: Response for successful Data Repo Snapshot reference clone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneReferencedGitRepoResourceResult'
    DisableApplicationResultResponse:
      description: Response holding the disable application result
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DisableApplicationResult'

    JobReportResponse:
      description: A response containing a JobReport object. Returned for running jobs.
      headers:
        Retry-After:
          description: >-
            optional - estimated seconds to wait before polling again. This allows
            a server to offer a hint as to when the job might be complete.
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobReport'

    EnumerateResourcesResponse:
      description: Listing of resources
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceList'

    CheckReferenceAccessResponse:
      description: Whether the specified reference is accessible or not
      content:
        application/json:
          schema:
            type: boolean
    CloneControlledGcpBigQueryDatasetResponse:
      description: response to clone BigQuery dataset operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneControlledGcpBigQueryDatasetResult'
    CloneWorkspaceResponse:
      description: Response to clone workspace request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloneWorkspaceResult'
    # Error Responses
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    PermissionDenied:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    NotFound:
      description: Not found (or unauthorized)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    Conflict:
      description: Request conflicts with current state
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

    ## ALPHA1 Responses
    ## They are no compatibility guarantees. The responses may change without notice.
    EnumerateJobsResponse:
      description: Listing of recent jobs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnumerateJobsResult'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
    ## for AzurePoC - we do not do authn. Just accept the user email and objectId as user/pwd
    basicAuth:
      type: http
      scheme: basic

security:
  - bearerAuth: []
  - authorization: [openid, email, profile]
