// OpenAPI/Swagger Server Generation
swaggerSources {
  server {
    inputFile = file(tasks.getByPath(':openapi:buildOpenApi').openApiSource)
    code {
      language = "spring"
      library = "spring-boot"
      outputDir = file(openapiOutputDir)
      components = ["models", "apis"]
      rawOptions = [
              "--api-package", "${artifactGroup}.generated.controller",
              "--model-package", "${artifactGroup}.generated.model",
              "--model-name-prefix", "Api",
              "--additional-properties", "errorOnUnknownEnum=true",
              "-D", "interfaceOnly=true," +
                      "useTags=true," +
                      "dateLibrary=java8"
      ]
    }
  }
}

// Copy the result of the openapi build into the built resources
// so it is available for the swagger_ui.html endpoint
task copyOpenApiToResources(type: Copy) {
  description 'Copy the openapi results into build resources to support swagger_ui'
  // TODO: declare openApiSource as a project output to avoid reaching into the other project from here.
  dependsOn(tasks.getByPath(':openapi:buildOpenApi'))
  from tasks.getByPath(':openapi:buildOpenApi').openApiSource
  into 'build/resources/main/api'
  rename { String filename -> "service_openapi.yaml" }
}

// We depend on the copy to make sure the copy happens. The real dependency is
// on the open api source generation
generateSwaggerCodeServer.dependsOn(copyOpenApiToResources)
sourceSets.main.java.srcDir "${openapiOutputDir}/src/main/java"
